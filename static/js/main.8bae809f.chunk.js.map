{"version":3,"sources":["components/login.js","components/channel.js","components/channelform.js","components/channellist.js","components/channels.js","components/register.js","components/home.js","components/navbar.js","components/tag.js","components/tags.js","components/user.js","components/boards.js","components/thread.js","components/board.js","components/search.js","App.js","index.js"],"names":["Login","props","useState","email","setEmail","password","setPassword","error","setError","useEffect","document","title","className","loggedIn","push","to","onSubmit","e","apiURL","preventDefault","fetch","method","body","JSON","stringify","headers","mode","then","res","status","json","localStorage","setItem","token","id","setLogin","htmlFor","type","onChange","target","value","Channel","useParams","setToken","channel","setChannel","comment","setComment","commentList","setCommentList","rating","setRating","numberOfRaters","setNumberOfRaters","ratersList","setRatersList","userid","setUserId","personalReviewData","setPersonalReviewData","reviewList","setReviewList","userReviewData","setUserReviewData","formRating","setFormRating","formReview","setFormReview","requestingRefresh","setRequestingRefresh","allTags","setAllTags","channelTags","setChannelTags","ytStatus","setYTStatus","twitterURL","setTwitterURL","niconicoURL","setNiconicoURL","ytAliases","setYTAliases","ytUpdateError","setYTUpdateError","refreshComments","comments","getItem","name","twitter","niconico","aliases","reviews","ratings","avgRating","newRatingsArray","i","length","sort","a","b","DateTime","fromISO","date","toMillis","slice","tags","raterid","_id","src","imageurl","alt","style","backgroundColor","role","viewcount","videocount","href","rel","size","color","youtube","data-bs-toggle","data-bs-target","onClick","Authorization","refreshYTStats","marginBottom","tagId","selectedTag","getElementById","tagid","addTag","list","map","index","data-tag-id","tagname","cursor","idToDelete","deleteTag","minHeight","height","width","Math","max","aria-valuenow","aria-valuemin","aria-valuemax","toFixed","Array","from","querySelectorAll","forEach","input","review","username","toFormat","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","sendRating","sendReview","submitReview","required","placeholder","min","defaultValue","rows","maxLength","sendChannelEdits","aria-describedby","channelid","authorid","float","commentid","deleteComment","whiteSpace","ChannelForm","setStatus","setNiconico","setYoutube","setTwitter","redirecting","setRedirecting","redirectURL","setRedirectURL","errors","setErrors","addChannel","ChannelList","totalresults","channels","tagvals","startpos","pageurl","parseInt","aria-disabled","background","pages","ind","Channels","setChannels","totalChannels","setTotalChannels","setPages","totalchannels","estimatedPages","ceil","setUsername","passwordRepeat","setPasswordRepeat","errorList","setErrorList","accountCreated","setAccountCreated","Homepage","setTags","setReviews","stats","setStats","textDecoration","val","users","NavBar","search","setSearch","history","useHistory","sendSearch","encodeURIComponent","split","join","aria-controls","aria-expanded","Tag","tag","setTag","Tags","newTagName","setNewTagName","newTagDescription","setNewTagDescription","newTagReason","setNewTagReason","approvedTags","setApprovedTags","waitingTags","setWaitingTags","refresh","setRefresh","approved","waiting","description","reason","alert","submitNewTag","closeForm","User","Boards","boards","setBoards","Thread","userId","threadData","setThreadData","commentsList","setCommentsList","threadText","setThreadText","threaddata","author","submitComment","paddingRight","text","textContent","Board","threads","setThreads","board","setBoard","newThreadTitle","setNewThreadTitle","newThreadText","setNewThreadText","minLength","requestData","boardid","submitThread","Search","searchstring","query","decodeURIComponent","require","HashRouter","Switch","Route","App","setApiUrl","setLoggedIn","removeItem","hashType","path","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8bae809f.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nfunction Login(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(false);\n\n\n    useEffect(() => {\n        document.title = 'ASMRdb';\n    }, [])\n\n    function login(e){\n        if(props.apiURL !== '') {\n            e.preventDefault();\n            fetch(props.apiURL + '/user/login', {\n                method: 'POST',\n                body: JSON.stringify({email: email, password: password}),\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors'\n            })\n            .then(res => {\n                if(res.status !== 200){\n                    setError(true);\n                }\n                else {\n                    return res.json()\n                }\n            })\n            .then(res => {\n                if(res) {\n                    localStorage.setItem('token', res.token);\n                    localStorage.setItem('id', res.id);\n                    props.setLogin(true);\n                }\n            })\n\n        }\n    }\n\n    return(\n    <div className='container'>\n        {props.loggedIn === true ? <Redirect push to='/'/> : null}\n        <div className='row justify-content-center'>\n            <div className='col-12 col-lg-6  bg-light p-4'>\n            <h1 className='text-center'>Login</h1>\n                <form onSubmit={login}>\n                    <div className='mb-3'>\n                        <label htmlFor='email' className='form-label'>Email Address</label>\n                        <input type='email' className='form-control' id='email' \n                            onChange={e => setEmail(e.target.value)}/>\n                    </div>\n                    <div className='mb-3'>\n                        <label htmlFor='password' className='form-label'>Password</label>\n                        <input type='password' className='form-control' id='password'\n                            onChange={e=>setPassword(e.target.value)}/>\n                    </div>\n                    <button type='submit' className='btn btn-primary'>Submit</button>\n                    {error === true ? <p className='text-center text-danger'>Email or password was incorrect. Please try again.</p> : null}\n                </form>\n                <hr/>\n                <div className='text-center'>\n                    <Link to='/register'>Create an Account</Link>\n                </div>\n            </div>\n        </div>\n    </div>)\n}\n\nexport default Login;","import { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { FaTwitter, FaYoutube } from \"react-icons/fa\";\nimport { SiNiconico } from \"react-icons/si\";\nimport { MdClose } from \"react-icons/md\";\nimport { DateTime } from \"luxon\";\n\nfunction Channel(props) {\n    let { id } = useParams();\n    const [token, setToken] = useState(\"\");\n    const [channel, setChannel] = useState();\n    const [comment, setComment] = useState(\"\");\n    const [commentList, setCommentList] = useState([]);\n\n    const [rating, setRating] = useState(0); //avg rating?\n    const [numberOfRaters, setNumberOfRaters] = useState(0);\n    const [ratersList, setRatersList] = useState([]);\n    const [userid, setUserId] = useState();\n    const [personalReviewData, setPersonalReviewData] = useState();\n    const [reviewList, setReviewList] = useState([]);\n\n    const [userReviewData, setUserReviewData] = useState([]);\n\n    const [formRating, setFormRating] = useState();\n    const [formReview, setFormReview] = useState();\n\n    const [requestingRefresh, setRequestingRefresh] = useState(false);\n\n    const [allTags, setAllTags] = useState([]);\n    const [channelTags, setChannelTags] = useState([]);\n\n    const [ytStatus, setYTStatus] = useState();\n    const [twitterURL, setTwitterURL] = useState();\n    const [niconicoURL, setNiconicoURL] = useState();\n    const [ytAliases, setYTAliases] = useState();\n\n    const [ytUpdateError, setYTUpdateError] = useState();\n\n    const refreshComments = () => {\n        if (props.apiURL !== \"\") {\n            fetch(props.apiURL + \"/comment/\" + id, {\n                method: \"GET\",\n                mode: \"cors\",\n            })\n                .then((res) => {\n                    if (res.status === 200) {\n                        return res.json();\n                    }\n                })\n                .then((res) => {\n                    setCommentList(res.comments);\n                });\n        }\n    };\n\n    useEffect(() => {\n        if (localStorage.getItem(\"token\") !== null) {\n            setToken(localStorage.getItem(\"token\"));\n        }\n        if (localStorage.getItem(\"id\") !== null) {\n            setUserId(localStorage.getItem(\"id\"));\n        }\n    }, []);\n\n    useEffect(() => {\n        if (props.apiURL !== \"\") {\n            fetch(props.apiURL + \"/channel/\" + id + \"/all\", {\n                method: \"GET\",\n                mode: \"cors\",\n            })\n                .then((res) => res.json())\n                .then((res) => {\n                    document.title = res.channel.name;\n                    setChannel(res.channel);\n                    setYTStatus(res.channel.status);\n                    setTwitterURL(res.channel.twitter);\n                    setNiconicoURL(res.channel.niconico);\n                    setYTAliases(res.channel.aliases);\n\n                    let reviews = res.ratings;\n                    let avgRating = 0;\n                    let newRatingsArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                    for (let i = 0; i < reviews.length; i++) {\n                        avgRating += reviews[i].rating;\n                        newRatingsArray[reviews[i].rating]++;\n                    }\n\n                    reviews.sort((a, b) => {\n                        return (\n                            DateTime.fromISO(b.date).toMillis() -\n                            DateTime.fromISO(a.date).toMillis()\n                        );\n                    });\n                    if (reviews.length > 10) {\n                        setReviewList(reviews.slice(0, 10));\n                    } else {\n                        setReviewList(reviews);\n                    }\n                    setRatersList(newRatingsArray);\n                    if (reviews.length > 0) {\n                        setRating(avgRating / reviews.length);\n                    }\n                    setNumberOfRaters(reviews.length);\n                    setCommentList(res.comments);\n                    setAllTags(res.allTags);\n                    setChannelTags(res.channel.tags);\n                });\n        }\n    }, [props.apiURL, id, userid, requestingRefresh, props.loggedIn]);\n\n    useEffect(() => {}, [channel]);\n\n    useEffect(() => {\n        if (typeof userid !== \"undefined\" && reviewList.length > 0) {\n            for (let i = 0; i < reviewList.length; i++) {\n                if (reviewList[i].raterid._id === userid) {\n                    setPersonalReviewData(reviewList[i]);\n                    break;\n                }\n            }\n        }\n    }, [userid, reviewList]);\n\n    const postComment = (e) => {\n        e.preventDefault();\n        if (props.apiURL !== \"\") {\n            fetch(props.apiURL + \"/comment\", {\n                method: \"POST\",\n                body: JSON.stringify({ channelid: id, comment: comment }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + token,\n                },\n                mode: \"cors\",\n            }).then((res) => {\n                if (res.status === 200) {\n                    refreshComments();\n                }\n            });\n        }\n    };\n\n    const deleteComment = (id, authorid) => {\n        if (props.apiURL !== \"\") {\n            fetch(props.apiURL + \"/comment\", {\n                method: \"DELETE\",\n                body: JSON.stringify({\n                    authorid: authorid,\n                    commentid: id,\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + token,\n                },\n                mode: \"cors\",\n            }).then((res) => {\n                if (res.status === 200) {\n                    refreshComments();\n                }\n            });\n        }\n    };\n\n    const submitReview = (e) => {\n        e.preventDefault();\n        let sendRating = 0;\n        let sendReview = \" \";\n        if (typeof formRating === \"undefined\") {\n            if (typeof personalReviewData !== \"undefined\") {\n                sendRating = personalReviewData.rating;\n            }\n        } else {\n            sendRating = formRating;\n        }\n\n        if (typeof formReview === \"undefined\") {\n            if (typeof personalReviewData !== \"undefined\") {\n                sendReview = personalReviewData.review;\n            }\n        } else {\n            sendReview = formReview;\n        }\n\n        fetch(props.apiURL + \"/channelrating/\" + id, {\n            method: \"POST\",\n            body: JSON.stringify({\n                rating: sendRating,\n                review: sendReview,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + token,\n            },\n            mode: \"cors\",\n        }).then((res) => {\n            if (res.status === 200) {\n                setRequestingRefresh(!requestingRefresh);\n            }\n        });\n    };\n\n    const deleteReview = () => {\n        if (props.apiURL !== \"\") {\n            fetch(props.apiURL + \"/channelrating/\" + id, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + token,\n                },\n                mode: \"cors\",\n            }).then((res) => {\n                if (res.status === 200) {\n                    setRequestingRefresh(!requestingRefresh);\n                    Array.from(document.querySelectorAll(\"input\")).forEach(\n                        (input) => (input.value = \"\")\n                    );\n                    Array.from(document.querySelectorAll(\"textarea\")).forEach(\n                        (input) => (input.value = \"\")\n                    );\n                    setPersonalReviewData(-1);\n                }\n            });\n        }\n    };\n\n    function addTag(e) {\n        e.preventDefault();\n        if (props.apiURL !== \"\") {\n            let tagId = 0;\n            let selectedTag = document.getElementById(\"tag\").value;\n            for (let i = 0; i < allTags.length; i++) {\n                if (allTags[i].name === selectedTag) {\n                    tagId = allTags[i]._id;\n                }\n            }\n\n            if (tagId !== 0) {\n                fetch(props.apiURL + \"/channel/\" + id + \"/tag\", {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        tagid: tagId,\n                    }),\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: \"Bearer \" + token,\n                    },\n                    mode: \"cors\",\n                }).then((res) => {\n                    setRequestingRefresh(!requestingRefresh);\n                });\n            } else {\n            }\n        }\n    }\n\n    function deleteTag(e, idToDelete) {\n        e.preventDefault();\n        if (props.apiURL !== \"\") {\n            fetch(props.apiURL + \"/channel/\" + id + \"/tag\", {\n                method: \"DELETE\",\n                body: JSON.stringify({\n                    tagid: idToDelete,\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + token,\n                },\n                mode: \"cors\",\n            }).then((res) => {\n                setRequestingRefresh(!requestingRefresh);\n            });\n        }\n    }\n\n    function sendChannelEdits(e) {\n        e.preventDefault();\n        if (props.apiURL !== \"\") {\n            fetch(props.apiURL + \"/channel/\" + id, {\n                method: \"PUT\",\n                body: JSON.stringify({\n                    status: ytStatus,\n                    niconico: niconicoURL,\n                    twitter: twitterURL,\n                    aliases: ytAliases,\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + token,\n                },\n                mode: \"cors\",\n            }).then((res) => setRequestingRefresh(!requestingRefresh));\n        }\n    }\n\n    function refreshYTStats(e) {\n        e.preventDefault();\n        if (props.apiURL !== \"\") {\n            fetch(props.apiURL + \"/channel/\" + id + \"/refresh\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + token,\n                },\n                mode: \"cors\",\n            }).then((res) => {\n                if (res.status === 200) {\n                    setRequestingRefresh(!requestingRefresh);\n                } else {\n                    setYTUpdateError(\n                        \"This channel has already been refreshed in the last 24 hours.\"\n                    );\n                }\n            });\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            {/* header */}\n            <div className=\"row bg-light\">\n                <div className=\"col-12 col-lg-3 p-2 d-flex justify-content-center align-items-center\">\n                    {typeof channel === \"undefined\" ? null : (\n                        <img\n                            src={channel.imageurl}\n                            alt={channel.name}\n                            className=\"h-auto w-100 rounded-circle text-center\"\n                        ></img>\n                    )}\n                </div>\n                <div\n                    className=\"bg-light col-12 col-lg-8 p-3\"\n                    style={{ backgroundColor: \"green\" }}\n                >\n                    {typeof channel === \"undefined\" ? (\n                        <div\n                            className=\"spinner-border text-success\"\n                            role=\"status\"\n                        >\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                    ) : (\n                        <div>\n                            <h1>{channel.name}</h1>\n                            {typeof channel.aliases !== \"undefined\" &&\n                            channel.aliases !== channel.name &&\n                            channel.aliases !== \"\" ? (\n                                <p className=\"fs-4\">\n                                    Also Known As: {channel.aliases}\n                                </p>\n                            ) : null}\n                            <p>Status: {channel.status}</p>\n                            {typeof channel === \"undefined\" ? null : (\n                                <div>\n                                    <p># Channel Views: {channel.viewcount}</p>\n                                    <p>\n                                        # Uploaded Videos: {channel.videocount}\n                                    </p>\n                                </div>\n                            )}\n\n                            <div className=\"socials\">\n                                {typeof channel !== \"undefined\" &&\n                                typeof channel.twitter !== \"undefined\" &&\n                                channel.twitter !== \"\" ? (\n                                    <a\n                                        href={\n                                            \"https://twitter.com/\" +\n                                            channel.twitter\n                                        }\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        <FaTwitter size=\"2em\" />\n                                    </a>\n                                ) : null}\n                                {typeof channel !== \"undefined\" &&\n                                typeof channel.niconico !== \"undefined\" &&\n                                channel.niconico !== \"\" ? (\n                                    <a\n                                        href={\n                                            \"https://ch.nicovideo.jp/\" +\n                                            channel.niconico\n                                        }\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        <SiNiconico size=\"2em\" color=\"gray\" />\n                                    </a>\n                                ) : null}\n                                <a\n                                    href={\n                                        \"https://www.youtube.com/channel/\" +\n                                        channel.youtube\n                                    }\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    <FaYoutube color=\"red\" size=\"2em\" />\n                                </a>\n                            </div>\n                        </div>\n                    )}\n                    <hr />\n                    {props.loggedIn === true ? (\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-success\"\n                            data-bs-toggle=\"modal\"\n                            data-bs-target=\"#editForm\"\n                        >\n                            Edit Channel Info\n                        </button>\n                    ) : null}\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-success mx-3\"\n                        onClick={(e) => refreshYTStats(e)}\n                    >\n                        Refresh YouTube Stats\n                    </button>\n                    {typeof ytUpdateError !== \"undefined\" &&\n                    ytUpdateError !== \"\" ? (\n                        <p\n                            className=\"mt-3\"\n                            style={{ color: \"red\", marginBottom: \"0\" }}\n                        >\n                            {ytUpdateError}\n                        </p>\n                    ) : null}\n                </div>\n            </div>\n\n            <div className=\"row mt-3\">\n                <div\n                    className=\"bg-light col-12  p-3\"\n                    style={{ backgroundColor: \"green\" }}\n                >\n                    <div>\n                        <p className=\"fs-2 text-center\">Tags</p>\n                        <hr />\n                        {allTags.length > 0 ? (\n                            <form\n                                className=\"mt-3 mb-3\"\n                                onSubmit={(e) => addTag(e)}\n                            >\n                                <label htmlFor=\"tag\"></label>\n                                <input list=\"tags\" name=\"tag\" id=\"tag\" />\n                                <datalist id=\"tags\">\n                                    {allTags.map((value, index) => {\n                                        return (\n                                            <option\n                                                key={value._id}\n                                                data-tag-id={value._id}\n                                                value={value.name}\n                                            ></option>\n                                        );\n                                    })}\n                                </datalist>\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-success\"\n                                >\n                                    Add Tag\n                                </button>\n                            </form>\n                        ) : null}\n                        {channelTags.length > 0\n                            ? channelTags.map((value, index) => {\n                                  return (\n                                      <span className=\"\" key={value._id}>\n                                          <Link to={\"/tag/\" + value._id + \"/1\"}>\n                                              {value.tagname}\n                                          </Link>\n                                          {props.loggedIn === true ? (\n                                              <MdClose\n                                                  color=\"red\"\n                                                  key={value._id}\n                                                  size=\"1.5em\"\n                                                  cursor=\"pointer\"\n                                                  onClick={(e) =>\n                                                      deleteTag(e, value._id)\n                                                  }\n                                              />\n                                          ) : index + 1 !==\n                                            channelTags.length ? (\n                                              <span key={value._id}>, </span>\n                                          ) : null}\n                                      </span>\n                                  );\n                              })\n                            : null}\n                    </div>\n                </div>\n            </div>\n\n            {/* stats */}\n            <div className=\"row mt-3 bg-light\" style={{ minHeight: \"25vh\" }}>\n                <p className=\"text-center pt-3 fs-3 mb-0\">Statistics</p>\n                <hr />\n                <div className=\"col-12 col-lg-6 p-3\">\n                    {ratersList.length > 0 ? (\n                        <div>\n                            <p className=\"text-center\">Ratings</p>\n                            {ratersList.map((value, index) => {\n                                return (\n                                    <div key={`review-count-${index}`}>\n                                        <div\n                                            className=\"progress mt-3\"\n                                            style={{ height: \"1.7em\" }}\n                                        >\n                                            <p>{index}:</p>\n                                            <div\n                                                className=\"progress-bar\"\n                                                role=\"progressbar\"\n                                                style={{\n                                                    width: `${\n                                                        (value /\n                                                            Math.max(\n                                                                ...ratersList\n                                                            )) *\n                                                        100\n                                                    }%`,\n                                                }}\n                                                aria-valuenow={value}\n                                                aria-valuemin=\"0\"\n                                                aria-valuemax={Math.max(\n                                                    ...ratersList\n                                                )}\n                                            >\n                                                {value}\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    ) : null}\n                    <hr />\n                    <div className=\"text-center\">\n                        <p className=\"mt-3\">\n                            Average Rating:{\" \"}\n                            {rating === 10 ? rating : rating.toFixed(1)}/10\n                            (votes: {numberOfRaters})\n                        </p>\n\n                        <p>\n                            Your Rating:{\" \"}\n                            {typeof personalReviewData === \"undefined\" ||\n                            personalReviewData === -1 ? (\n                                \"-\"\n                            ) : (\n                                <span>\n                                    {personalReviewData.rating}\n                                    <MdClose\n                                        cursor=\"pointer\"\n                                        color=\"red\"\n                                        size=\"1.5em\"\n                                        onClick={() => deleteReview()}\n                                    />\n                                </span>\n                            )}\n                        </p>\n\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-success\"\n                            data-bs-toggle=\"modal\"\n                            data-bs-target=\"#reviewForm\"\n                        >\n                            {typeof personalReviewData === \"undefined\" ||\n                            personalReviewData === -1\n                                ? \"Add Review\"\n                                : \"Edit Review\"}\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-lg-6 d-flex flex-column align-items-center p-3\">\n                    <p>Recent Reviews</p>\n                    {reviewList.length > 0 ? (\n                        reviewList.map((value, index) => {\n                            return (\n                                <p\n                                    key={`latest-reviews-${index}`}\n                                    style={{ cursor: \"pointer\", color: \"blue\" }}\n                                    data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#reviewShow\"\n                                    onClick={() =>\n                                        setUserReviewData([\n                                            value.review,\n                                            value.rating,\n                                            value.raterid.username,\n                                        ])\n                                    }\n                                >\n                                    {value.raterid.username} {value.rating}/10 -{\" \"}\n                                    {DateTime.fromISO(value.date).toFormat(\n                                        \"yyyy LLL dd\"\n                                    )}\n                                </p>\n                            );\n                        })\n                    ) : (\n                        <p>None</p>\n                    )}\n                </div>\n            </div>\n\n            {/* Modal Specific Review */}\n            <div\n                className=\"modal fade\"\n                id=\"reviewShow\"\n                tabIndex=\"-1\"\n                aria-labelledby=\"reviewShowLabel\"\n                aria-hidden=\"true\"\n            >\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"reviewShowLabel\">\n                                {userReviewData[2]}'s review <br />\n                                {userReviewData[1]}/10\n                            </h5>\n                            <button\n                                type=\"button\"\n                                className=\"btn-close\"\n                                data-bs-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                            ></button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <p>\n                                {typeof userReviewData[0] !== \"undefined\"\n                                    ? userReviewData[0]\n                                    : \"User did not write a review.\"}\n                            </p>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                data-bs-dismiss=\"modal\"\n                            >\n                                Close\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Modal Review */}\n            <div\n                className=\"modal fade\"\n                id=\"reviewForm\"\n                tabIndex=\"-1\"\n                aria-labelledby=\"reviewFormLabel\"\n                aria-hidden=\"true\"\n            >\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"reviewFormLabel\">\n                                Review\n                            </h5>\n                            <button\n                                type=\"button\"\n                                className=\"btn-close\"\n                                data-bs-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                            ></button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form onSubmit={(e) => submitReview(e)}>\n                                <div className=\"mb-3\">\n                                    <label\n                                        htmlFor=\"reviewRating\"\n                                        className=\"form-label\"\n                                    >\n                                        Rating\n                                    </label>\n                                    <div className=\"input-group\">\n                                        {typeof personalReviewData ===\n                                        \"undefined\" ? (\n                                            <input\n                                                type=\"number\"\n                                                className=\"form-control\"\n                                                id=\"reviewRating\"\n                                                required\n                                                onChange={(e) =>\n                                                    setFormRating(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                placeholder=\"0-10\"\n                                                min=\"0\"\n                                                max=\"10\"\n                                            />\n                                        ) : (\n                                            <input\n                                                type=\"number\"\n                                                className=\"form-control\"\n                                                id=\"reviewRating\"\n                                                required\n                                                onChange={(e) =>\n                                                    setFormRating(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                placeholder=\"7\"\n                                                defaultValue={\n                                                    personalReviewData.rating\n                                                }\n                                                min=\"0\"\n                                                max=\"10\"\n                                            />\n                                        )}\n\n                                        <span\n                                            className=\"input-group-text\"\n                                            id=\"basic-addon2\"\n                                        >\n                                            /10\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"mb-3\">\n                                    <label\n                                        htmlFor=\"reviewText\"\n                                        className=\"form-label\"\n                                    >\n                                        Review\n                                    </label>\n                                    {typeof personalReviewData ===\n                                    \"undefined\" ? (\n                                        <textarea\n                                            className=\"form-control\"\n                                            id=\"reviewText\"\n                                            onChange={(e) =>\n                                                setFormReview(e.target.value)\n                                            }\n                                            rows=\"3\"\n                                            placeholder=\"optional\"\n                                            maxLength=\"1000\"\n                                        ></textarea>\n                                    ) : (\n                                        <textarea\n                                            className=\"form-control\"\n                                            id=\"reviewText\"\n                                            onChange={(e) =>\n                                                setFormReview(e.target.value)\n                                            }\n                                            rows=\"3\"\n                                            placeholder=\"optional\"\n                                            defaultValue={\n                                                personalReviewData.review\n                                            }\n                                            maxLength=\"1000\"\n                                        ></textarea>\n                                    )}\n                                </div>\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary mt-3 float-end\"\n                                >\n                                    Post Review\n                                </button>\n                            </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                data-bs-dismiss=\"modal\"\n                            >\n                                Close\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Modal Edit */}\n            <div\n                className=\"modal fade\"\n                id=\"editForm\"\n                tabIndex=\"-1\"\n                aria-labelledby=\"editFormLabel\"\n                aria-hidden=\"true\"\n            >\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"reviewFormLabel\">\n                                Info\n                            </h5>\n                            <button\n                                type=\"button\"\n                                className=\"btn-close\"\n                                data-bs-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                            ></button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form onSubmit={(e) => sendChannelEdits(e)}>\n                                <label htmlFor=\"status\">YouTube Status:</label>\n                                <select\n                                    className=\"form-select\"\n                                    aria-label=\"Activity Select\"\n                                    required\n                                    id=\"status\"\n                                    value={ytStatus}\n                                    onChange={(e) =>\n                                        setYTStatus(e.target.value)\n                                    }\n                                >\n                                    <option value=\"Active\">Active</option>\n                                    <option value=\"Inactive\">Inactive</option>\n                                    <option value=\"Unknown\">Unknown</option>\n                                </select>\n\n                                <label htmlFor=\"twitter\" className=\"form-label\">\n                                    Twitter:\n                                </label>\n                                <div className=\"input-group mb-3\">\n                                    <span\n                                        className=\"input-group-text\"\n                                        id=\"basic-addon3\"\n                                    >\n                                        @\n                                    </span>\n                                    {typeof twitterURL !== \"undefined\" ? (\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            id=\"twitter\"\n                                            aria-describedby=\"basic-addon3\"\n                                            defaultValue={twitterURL}\n                                            onChange={(e) =>\n                                                setTwitterURL(e.target.value)\n                                            }\n                                        />\n                                    ) : (\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            id=\"twitter\"\n                                            aria-describedby=\"basic-addon3\"\n                                            onChange={(e) =>\n                                                setTwitterURL(e.target.value)\n                                            }\n                                        />\n                                    )}\n                                </div>\n\n                                <label htmlFor=\"nnd\" className=\"form-label\">\n                                    Niconico:\n                                </label>\n                                <div className=\"input-group mb-3\">\n                                    <span\n                                        className=\"input-group-text\"\n                                        id=\"basic-addon3\"\n                                    >\n                                        https://ch.nicovideo.jp/\n                                    </span>\n                                    {typeof niconicoURL !== \"undefined\" ? (\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            id=\"nnd\"\n                                            aria-describedby=\"basic-addon3\"\n                                            defaultValue={niconicoURL}\n                                            onChange={(e) =>\n                                                setNiconicoURL(e.target.value)\n                                            }\n                                        />\n                                    ) : (\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            id=\"nnd\"\n                                            aria-describedby=\"basic-addon3\"\n                                            onChange={(e) =>\n                                                setNiconicoURL(e.target.value)\n                                            }\n                                        />\n                                    )}\n                                </div>\n\n                                <label htmlFor=\"alias\" className=\"form-label\">\n                                    Aliases:\n                                </label>\n                                {typeof ytAliases !== \"undefined\" ? (\n                                    <textarea\n                                        className=\"form-control\"\n                                        id=\"alias\"\n                                        rows=\"3\"\n                                        defaultValue={ytAliases}\n                                        onChange={(e) =>\n                                            setYTAliases(e.target.value)\n                                        }\n                                    ></textarea>\n                                ) : (\n                                    <textarea\n                                        className=\"form-control\"\n                                        id=\"alias\"\n                                        rows=\"3\"\n                                        onChange={(e) =>\n                                            setYTAliases(e.target.value)\n                                        }\n                                    ></textarea>\n                                )}\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary mt-3 float-end\"\n                                >\n                                    Submit Changes\n                                </button>\n                            </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                data-bs-dismiss=\"modal\"\n                            >\n                                Close\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* comment section */}\n            <div className=\"row mt-3 mb-3\">\n                <div\n                    className=\"col-12 bg-light\"\n                    style={{ backgroundColor: \"green\" }}\n                >\n                    <form onSubmit={postComment}>\n                        <label\n                            htmlFor=\"comment-form\"\n                            className=\"form-label mt-3\"\n                        >\n                            Add a comment\n                        </label>\n                        <textarea\n                            className=\"form-control mb-3\"\n                            id=\"comment-form\"\n                            rows=\"3\"\n                            onChange={(e) => setComment(e.target.value)}\n                        />\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            Submit\n                        </button>\n                    </form>\n                    <hr />\n                    <p className=\"fs-2 text-center\">Comments</p>\n                    <div className=\"comment-area\">\n                        {typeof commentList !== \"undefined\" &&\n                        commentList.length > 0 ? (\n                            commentList.map((value, index) => {\n                                return (\n                                    <div key={value.authorid._id + index}>\n                                        <p className=\"fs-2 fw-bold\">\n                                            {value.authorid.username}\n                                            <span className=\"fs-5 fw-normal\">\n                                                {\" \"}\n                                                {DateTime.fromISO(\n                                                    value.date\n                                                ).toFormat(\"yyyy LLL dd\")}\n                                            </span>\n\n                                            {typeof userid !== \"undefined\" &&\n                                            value.authorid._id === userid ? (\n                                                <MdClose\n                                                    color=\"red\"\n                                                    cursor=\"pointer\"\n                                                    size=\"1.3em\"\n                                                    style={{ float: \"right\" }}\n                                                    onClick={() =>\n                                                        deleteComment(\n                                                            value._id,\n                                                            value.authorid._id\n                                                        )\n                                                    }\n                                                />\n                                            ) : null}\n                                        </p>\n                                        <p\n                                            className=\"fs-5\"\n                                            style={{ whiteSpace: \"pre-wrap\" }}\n                                        >\n                                            {value.comment}\n                                        </p>\n                                        {index !== commentList.length - 1 ? (\n                                            <hr />\n                                        ) : null}\n                                    </div>\n                                );\n                            })\n                        ) : (\n                            <p>No comments</p>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Channel;\n","import { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\n\nconst ChannelForm = (props) => {\n    const [status, setStatus] = useState('Active');\n    const [niconico, setNiconico] = useState('');\n    const [youtube, setYoutube] = useState();\n    const [twitter, setTwitter] = useState();\n    const [redirecting, setRedirecting] = useState(false);\n    const [redirectURL, setRedirectURL] = useState('');\n    const [token, setToken] = useState('');\n    const [errors, setErrors] = useState(false);\n\n    useEffect(() => {\n        document.title = 'Channel Form | ASMRdb';\n        if(localStorage.getItem('token') !== null) {\n            setToken(localStorage.getItem('token'));\n        }\n\n    }, [])\n\n    function addChannel(e) {\n        e.preventDefault();\n        if(props.apiURL !== '' && token !== '') {\n            fetch(props.apiURL+'/channel', {\n                method: 'POST',\n                mode:'cors',\n                body: JSON.stringify({status, niconico, youtube, twitter}),\n                headers: { 'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + token },\n            })\n            .then(res => {\n                if(res.status !== 400) {\n                    return res.json()\n                }\n                else {\n                    setErrors(true);\n                }\n            })\n            .then(res => {\n                if(typeof res !== 'undefined') {\n                    setRedirectURL('/channel/'+res.channelid[0]._id);\n                }\n            });\n        }\n    }\n\n    useEffect(() => {\n        if(redirectURL !== '') {\n            setRedirecting(true);\n        }\n    }, [redirectURL]);\n\n\n\n    return (\n        <div className='container'>\n            {props.loggedIn !== true ? <Redirect to={'/login'}/> : null}\n            {redirecting === true ? <Redirect to={redirectURL}/>: null}\n            <div className='row d-flex justify-content-center mb-3'>\n                <div className='col-12 col-lg-6 bg-light p-2'>\n                    <h1 className='text-center'>Channel Form</h1>\n                    <form onSubmit={e => addChannel(e)}>\n                        <label htmlFor=\"youtube-url\" className=\"form-label\">YouTube URL</label>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"basic-addon3\">https://www.youtube.com/channel/</span>\n                            <input type=\"text\" required className=\"form-control\" id=\"youtube-url\" aria-describedby=\"basic-addon3\" onChange={e=>setYoutube(e.target.value)}/>\n                        </div>\n\n\n\n\n                        <label htmlFor='status'>YouTube Status:</label>\n                        <select className=\"form-select\" aria-label=\"Activity Select\" required id='status' onChange={e => setStatus(e.target.value)}>\n                            <option value=\"Active\">Active</option>\n                            <option value=\"Inactive\">Inactive</option>\n                            <option value=\"Unknown\">Unknown</option>\n                        </select>\n\n\n                        <hr/>\n                        <p>Optional Socials:</p>\n\n\n\n\n                        <label htmlFor=\"twitter\" className=\"form-label\">Twitter:</label>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"basic-addon3\">@</span>\n                            <input type=\"text\" className=\"form-control\" id=\"twitter\" aria-describedby=\"basic-addon3\" onChange={e => setTwitter(e.target.value)}/>\n                        </div>\n\n\n                        <label htmlFor=\"nnd\" className=\"form-label\">Niconico:</label>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"basic-addon3\">https://ch.nicovideo.jp/</span>\n                            <input type=\"text\" className=\"form-control\" id=\"nnd\" aria-describedby=\"basic-addon3\" onChange={e => setNiconico(e.target.value)}/>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-success mt-3\">Add Channel</button>\n                    </form>\n                    {errors === true ? \n                    <div className='mt-3'>\n                        <p>Something went wrong. Please make sure your input only contains:</p>\n                        <ul>\n                            <li>numbers and letters (a - z, A - Z, 0 - 9)</li>\n                            <li>spaces, underscores, and dashes ( , _, -)</li>\n                        </ul>\n                        </div> : null}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChannelForm;","import {Link} from 'react-router-dom';\n\nconst ChannelList = (props) => {\n    return (\n        <div className='container'>\n            <div className='row bg-light p-2 mb-4'>\n                <div className='col'>\n                    <h1 className='text-center'>{props.title}\n                    {typeof props.totalresults !== 'undefined' && props.totalresults !== '' ? <span className='fs-5'> ~{props.totalresults} result(s) found</span> : null}</h1>\n                    <hr/> \n                    {props.channels.length > 0 ? \n                        props.channels.map((value, index) => {\n                            return (          \n                                    <div className='lh-1' key={value._id}>\n                                        <div className='channel d-flex'>\n                                        <img src={value.imageurl} alt={value.name}></img>\n                                        <div className='mx-3'>\n                                            <Link to={'/channel/'+value._id}>  \n                                                <p className='fs-4 fw-bold'>{value.name}</p>\n                                            </Link> \n                                            <p>Videos: {value.videocount}</p>\n                                            <p>Tags: {value.tags.map((tagvals, index) => {\n                                                return (\n                                                    <span key={tagvals._id}>{tagvals.tagname}{index + 1 !== value.tags.length ? ', ' : ' '}</span>\n                                                )\n                                            })}</p>\n                                        </div>\n                                        </div>\n                                    {index + 1 !== props.channels.length ? <hr/> : null}\n                                    </div>\n                            )\n                        })\n                    :\n                    <div>\n                        <p>No matches found</p>\n                    </div>\n                    }\n                </div>\n            </div>\n\n\n        <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n            {\n                props.startpos === '1' ?\n                <li className=\"page-item disabled\" >\n                <Link className=\"page-link\" to={`${props.pageurl}${parseInt(props.startpos) - 1}`} tabIndex=\"-1\" aria-disabled=\"true\">&lt;&lt;</Link>\n                </li> :\n                <li className=\"page-item\">\n                <Link className=\"page-link\" to={`${props.pageurl}${parseInt(props.startpos) - 1}`} tabIndex=\"-1\" aria-disabled=\"true\">&lt;&lt;</Link>\n                </li>\n            }{\n                props.startpos === '1' ? \n                <li className=\"page-item\" ><Link className=\"page-link\" style={{background: \"#0d6efd\", color:\"#fff\"}} to={`${props.pageurl}1`}>1</Link></li> :\n                <li className=\"page-item\"><Link className=\"page-link\" to={`${props.pageurl}1`}>1</Link></li>\n            }\n            {props.pages >= 2 ? \n            [...Array(props.pages)].map((value, ind) => {\n                if(ind === 0) return null;\n                return (\n                    ind + 1=== parseInt(props.startpos) ? \n                        <li className=\"page-item\" \n                        key={ind}><Link className=\"page-link\" to={`${props.pageurl}${ind + 1}`} style={{background: \"#0d6efd\", color:\"#fff\"}}>{ind + 1}</Link></li> : \n\n                        <li className=\"page-item\" \n                        key={ind}><Link className=\"page-link\" to={`${props.pageurl}${ind + 1}`}  >{ind + 1}</Link></li>\n                )\n            })\n            :\n            null\n            }\n            {\n                parseInt(props.startpos) + 1 <= props.pages ?\n                <li className=\"page-item\">\n                <Link className=\"page-link\" to={`${props.pageurl}${parseInt(props.startpos) + 1}`}>&gt;&gt;</Link>\n                </li>\n                :\n                <li className=\"page-item disabled\">\n                <Link className=\"page-link\" to={`${props.pageurl}${parseInt(props.startpos) + 1}`} tabIndex=\"-1\" aria-disabled=\"true\">&gt;&gt;</Link>\n                </li>\n            }\n        </ul>\n        </nav>\n\n        </div>\n    )\n}\n\nexport default ChannelList;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ChannelList from './channellist';\n\nconst Channels = (props) => {\n    const [channels, setChannels] = useState([]);\n    const [totalChannels, setTotalChannels] = useState(0);\n    const [pages, setPages] = useState();\n    let {startpos} = useParams();\n\n    useEffect(() => {\n        document.title = 'Channels | ASMRdb';\n        if(props.apiURL !== '' && typeof startpos !== 'undefined') {\n            fetch(props.apiURL+'/channel/limit/'+startpos,{\n                method: 'GET',\n                mode: 'cors'\n            })\n            .then(res => {\n                if(res.status !== 400) {\n                    return res.json();\n                }\n            })\n            .then(res => {\n                if(typeof res === 'undefined') {return;}\n                setChannels(res.channels)\n                setTotalChannels(res.totalchannels);\n                let estimatedPages = Math.ceil(res.totalchannels / 40.0);\n                if(estimatedPages <= 0) {\n                    setPages(1);\n                }\n                else {\n                    setPages(estimatedPages);\n                }\n            }   \n            );\n        }\n    }, [props.apiURL, startpos])\n\n    return (\n        <div>\n        <ChannelList channels={channels} title={'Channels'} totalresults={totalChannels} startpos={startpos} pages={pages} pageurl={'/channels/'}/>\n            \n        </div>\n    )\n}\n\nexport default Channels;","import {useState} from 'react';\nimport { Redirect } from 'react-router-dom';\n\nfunction Login(props) {\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n    const [errorList, setErrorList] = useState([]);\n    const [accountCreated, setAccountCreated] = useState(false);\n\n\n\n    function register(e){\n        if(props.apiURL !== '') {\n            e.preventDefault();\n            if(passwordRepeat === password) {\n                fetch(props.apiURL + '/user', {\n                    method: 'POST',\n                    body: JSON.stringify({username:username, email: email, password: password, passwordRepeat: passwordRepeat}),\n                    headers: { 'Content-Type': 'application/json' },\n                    mode: 'cors'\n                })\n                .then(res => {\n                    if(res.status === 200) {\n                        setAccountCreated(true);\n                        return;\n                    }\n                    return res.json();\n                })\n                .then(res => {\n                    if(typeof res === 'undefined') {\n                        return;\n                    }\n                    if(typeof res.errors !== 'undefined' || res.errors.length > 0) {\n                        setErrorList(res.errors);\n                    }\n                    else {\n                        setAccountCreated(true);\n                    }\n                });\n            }\n            else { \n                setErrorList(['Passwords do not match.']);\n            }\n        }\n\n        \n    }\n\n\n    return(\n    <div className='container'>\n        {accountCreated === true ? <Redirect push to='/login'/> : null}\n        {props.loggedIn === true ? <Redirect push to='/'/> : null}\n        <div className='row justify-content-center'>\n            <div className='col-12 col-lg-6 bg-light p-4'>\n            <h1 className='text-center'>Register</h1>\n                <form onSubmit={register}>\n                    <div className='mb-3'>\n                        <label htmlFor='username' className='form-label'>Username</label>\n                        <input type='string' className='form-control' id='username' required\n                            onChange={e => setUsername(e.target.value)}/>\n                    </div>\n\n                    <div className='mb-3'>\n                        <label htmlFor='email' className='form-label'>Email Address</label>\n                        <input type='email' className='form-control' id='email'  required\n                            onChange={e => setEmail(e.target.value)}/>\n                    </div>\n                    <div className='mb-3'>\n                        <label htmlFor='password' className='form-label'>Password</label>\n                        <input type='password' className='form-control' id='password' required\n                            onChange={e=>setPassword(e.target.value)}/>\n                    </div>\n                    <div className='mb-3'>\n                        <label htmlFor='passwordrepeat' className='form-label'>Password Repeated</label>\n                        <input type='password' className='form-control' id='passwordrepeat' required\n                            onChange={e=>setPasswordRepeat(e.target.value)}/>\n                    </div>\n                    <button type='submit' className='btn btn-primary'>Submit</button>\n                    {errorList.length > 0 ? \n                        <div className='text-center mt-3'>\n                            {errorList.map((value, index) => {\n                                return <p key={index} className='text-danger'>{value}</p>\n                            })}\n                        </div>\n                    : null}\n                </form>\n            </div>\n        </div>\n    </div>)\n}\n\nexport default Login;","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Homepage = (props) => {\n    const [channels, setChannels] = useState([]);\n    const [tags, setTags] = useState([]);\n    const [reviews, setReviews] = useState([]);\n    const [stats, setStats] = useState([]);\n\n    useEffect(() => {\n        document.title = 'ASMRdb';\n    }, []);\n\n    useEffect(() => {\n        if(props.apiURL !== '') {\n            fetch(props.apiURL+'/channel/latest', {\n                method:\"GET\",\n                mode:'cors'\n            })\n            .then( res => res.json())\n            .then( res => setChannels(res.channels));\n\n\n\n            fetch(props.apiURL+'/tag/latest', {\n                method:\"GET\",\n                mode:'cors'\n            })\n            .then( res => res.json())\n            .then( res => setTags(res.tags));\n\n\n\n            fetch(props.apiURL+'/channelrating/latest', {\n                method:\"GET\",\n                mode:'cors'\n            })\n            .then( res => res.json())\n            .then( res => setReviews(res.reviews));\n\n            fetch(props.apiURL+'/statistics', {\n                method:\"GET\",\n                mode:'cors'\n            })\n            .then( res => res.json())\n            .then( res => setStats(res));\n        }\n    }, [props.apiURL])\n\n    return (\n        <div className='container'>\n            <div className='row bg-light mb-3 p-2'> \n                <h1>ASMR Database</h1>\n                <hr/>\n                <p>The goal of ASMRdb.net is to document all ASMR YouTubers. <br/>By collecting them all in one place, ASMR enthusiasts will have an easier time looking for new channels to listen to. This website is built as a wiki, so feel free to add channels, tags, and join in on discussions.</p>\n            </div>\n\n            <div className='row bg-light mb-3 p-2'>\n                <div className='col-12'>\n                    <h2 className='text-center'>Recently Added</h2>\n                    <hr/>\n                    {channels.length > 0 ? \n                    <div className='row'>\n                    {channels.map((value) => {\n                        return (        \n                            <Link to={'/channel/'+value._id} key={value._id} className='col-4' style={{textDecoration:'none', color:'black'}}>   \n                                <div className='card h-100'>\n                                    <img src={value.imageurl} className=\"card-img-top\" alt={value.name}></img> \n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">{value.name}</h5>\n                                        <p className=\"card-text\">Videos: {value.videocount}</p>\n                                        {\n                                            typeof value.tags !== 'undefined' && value.tags.length > 0 ?\n                                                <p>\n                                                    {value.tags.map((val, ind) => {\n                                                        return <span key={val._id}>{val.tagname}{ind + 1 !== value.tags.length ? ', ' : ' '}</span>\n                                                    })}\n                                                </p>\n                                                :\n                                                null\n                                        }\n                                        \n                                    </div>\n                                </div>\n                            </Link>\n                        )\n                    })}\n                    </div>\n                    : \n                    <div className=\"spinner-border text-success\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>}\n                </div>\n            </div>\n\n            <div className='row bg-light p-2 mb-3'>\n                <div className='col-12 col-lg-4'>\n                    <h2 className='text-center'>Latest Tags</h2>\n                    <hr/>\n                        {tags.length > 0 ? \n                            tags.map((value) => {\n                                return (\n                                <Link key={value._id} to={'/tag/' +value._id +'/1'}>\n                                    <p>{value.name}</p>\n                                </Link>\n                                )\n                            })\n                        :  \n                        <div className=\"spinner-border text-success\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        }\n                </div>\n                <div className='col-12 col-lg-4 text-center '>\n                    <h2>Latest Reviews</h2>\n                    <hr/>\n                    {reviews.length > 0 ? \n                    reviews.map(value => {\n                        return (\n                            <div key={value._id}>\n                                <p className='text-start'><Link to={'/channel/'+value.channelid._id}>{value.channelid.name}</Link> - {value.rating}/10</p>\n                            </div>\n                        )\n                    })\n                    :\n                    null}\n                </div>\n                <div className='col-12 col-lg-4'>\n                    <h2 className='text-center'>Statistics</h2>\n                    <hr/>\n                    {typeof stats !== 'undefined' ?\n                        <div>\n                            <p>Users: {stats.users}</p>\n                            <p>Channels: {stats.channels}</p>\n                            <p>Tags: {stats.tags}</p>\n                            <p>Reviews: {stats.reviews}</p>\n                        </div>\n                    :\n                    <div className=\"spinner-border text-success\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                    }\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Homepage;","import { Link, useHistory } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\n\nconst NavBar = (props) => {\n    const [search, setSearch] = useState(\"\");\n    const history = useHistory();\n\n    const sendSearch = (e) => {\n        e.preventDefault();\n        if (props.apiURL !== \"\") {\n            setSearch(\"\");\n            history.push(\n                \"/search/\" +\n                    encodeURIComponent(search).split(\" \").join(\"_\") +\n                    \"/1\"\n            );\n        }\n    };\n    return (\n        <nav\n            className=\"navbar navbar-light navbar-expand-lg shadow mb-3\"\n            style={{ backgroundColor: \"black\" }}\n        >\n            <div className=\"container\">\n                <Link to=\"/\" className=\"navbar-brand text-white\">\n                    Home\n                </Link>\n\n                <button\n                    className=\"navbar-toggler navbar-dark\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                >\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div\n                    className=\"collapse navbar-collapse\"\n                    id=\"navbarSupportedContent\"\n                >\n                    <ul className='navbar-nav me-auto mb-lg-0\"'>\n                        <li className=\"nav-item\">\n                            <Link\n                                to=\"/channels/1\"\n                                className=\"nav-link text-white\"\n                            >\n                                Channels\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/tags\" className=\"nav-link text-white\">\n                                Tags\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            {props.loggedIn === true ? (\n                                <Link to=\"/add\" className=\"nav-link text-white\">\n                                    Add Channel\n                                </Link>\n                            ) : null}\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/boards\" className=\"nav-link text-white\">\n                                Discussion\n                            </Link>\n                        </li>\n                        {!props.loggedIn ? (\n                            <li className=\"nav-item\">\n                                <Link\n                                    to=\"/login\"\n                                    className=\"nav-link text-white\"\n                                >\n                                    Login\n                                </Link>\n                            </li>\n                        ) : (\n                            <li\n                                onClick={() => props.setLogin(false)}\n                                className=\"nav-item nav-link text-white\"\n                                style={{ cursor: \"pointer\" }}\n                            >\n                                Log Out\n                            </li>\n                        )}\n                    </ul>\n                    <form\n                        className=\"form-inline my-2 my-lg-0 d-flex\"\n                        onSubmit={(e) => sendSearch(e)}\n                    >\n                        <div className=\"input-group\">\n                            <input\n                                className=\"form-control mr-sm-2 rounded-start\"\n                                type=\"text\"\n                                onChange={(e) => setSearch(e.target.value)}\n                                name=\"query\"\n                                placeholder=\"Search...\"\n                                value={search}\n                                aria-label=\"Search\"\n                            />\n                            <button\n                                className=\"btn btn-outline-success my-2 my-sm-0\"\n                                style={{ backgroundColor: \"darkGreen\" }}\n                            >\n                                <FaSearch\n                                    onClick={(e) => sendSearch(e)}\n                                    color=\"black\"\n                                />\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ChannelList from './channellist';\n\nconst Tag = (props) => {\n    let {id, startpos} = useParams();\n    const [channels, setChannels] = useState([]);\n    const [tag, setTag] = useState();\n    const [totalChannels, setTotalChannels] = useState(0);\n    const [pages, setPages] = useState();\n\n    useEffect(() => {\n        if(props.apiURL !== '') {\n            fetch(props.apiURL+'/tag/'+id+'/channels/'+startpos, {\n                method: 'GET',\n                mode:'cors'\n            })\n            .then(res => res.json())\n            .then(res => {\n                setChannels(res.channels); \n                setTotalChannels(res.totalchannels);\n                setTag(res.tag);\n                let estimatedPages = Math.ceil(res.totalchannels / 40.0);\n                if(estimatedPages <= 0) {\n                    setPages(1);\n                }\n                else {\n                    setPages(estimatedPages);\n                }\n            });\n        }\n    }, [props.apiURL, id, startpos])\n\n    useEffect(() => {\n    }, [channels]);\n\n    useEffect(() => {\n        if(typeof tag !== 'undefined' && tag.name !== '') {\n            document.title = tag.name + \" | ASMRdb\";\n        }\n    }, [tag]);\n\n    \n\n    return (\n        <ChannelList pageurl={`/${id}/`} pages={pages} startpos={startpos} totalresults={totalChannels} channels={channels} title={typeof tag !== 'undefined' ? 'Tag: ' + tag.name : 'Tag: '}/>\n    )\n}\n\nexport default Tag;","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Tags = (props) => {\n    const [newTagName, setNewTagName] = useState(\"\");\n    const [newTagDescription, setNewTagDescription] = useState(\"\");\n    const [newTagReason, setNewTagReason] = useState(\"\");\n    const [token, setToken] = useState(\"\");\n    const [approvedTags, setApprovedTags] = useState([]);\n    const [waitingTags, setWaitingTags] = useState([]);\n    const [refresh, setRefresh] = useState(false);\n\n    useEffect(() => {\n        document.title = \"Tags | ASMRdb\";\n        if (localStorage.getItem(\"token\") !== null) {\n            setToken(localStorage.getItem(\"token\"));\n        }\n\n        if (props.apiURL !== \"\") {\n            fetch(props.apiURL + \"/tag\", {\n                method: \"GET\",\n                mode: \"cors\",\n            })\n                .then((res) => res.json())\n                .then((res) => {\n                    setApprovedTags(\n                        res.approved.sort((a, b) => {\n                            return a.name > b.name;\n                        })\n                    );\n                    setWaitingTags(res.waiting);\n                });\n        }\n    }, [props.apiURL, refresh]);\n\n    useEffect(() => {}, [approvedTags]);\n\n    function submitNewTag(e) {\n        e.preventDefault();\n        if (props.apiURL !== \"\") {\n            fetch(props.apiURL + \"/tag\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    name: newTagName,\n                    description: newTagDescription,\n                    reason: newTagReason,\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: \"Bearer \" + token,\n                },\n                mode: \"cors\",\n            }).then((res) => {\n                if (res.status === 200) {\n                    setRefresh(!refresh);\n                    alert(\"sent\");\n                }\n            });\n        }\n    }\n\n    function closeForm(e) {\n        e.preventDefault();\n        Array.from(document.querySelectorAll(\"input\")).forEach(\n            (input) => (input.value = \"\")\n        );\n        Array.from(document.querySelectorAll(\"textarea\")).forEach(\n            (input) => (input.value = \"\")\n        );\n        setNewTagName(\"\");\n        setNewTagDescription(\"\");\n        setNewTagReason(\"\");\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row bg-light\">\n                <div className=\"col-12 col-lg-2 p-2 text-center\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-success\"\n                        data-bs-toggle=\"modal\"\n                        data-bs-target=\"#tagModal\"\n                    >\n                        Add A New Tag\n                    </button>\n                </div>\n                <div className=\"col-12 col-lg-5 p-2 text-center\">\n                    <h1>Tags</h1>\n                    <hr />\n\n                    {approvedTags.length > 0 ? (\n                        approvedTags.map((value, index) => {\n                            return (\n                                <p key={value._id}>\n                                    <Link to={\"/tag/\" + value._id + \"/1\"}>\n                                        {value.name}\n                                    </Link>\n                                </p>\n                            );\n                        })\n                    ) : (\n                        <div\n                            className=\"spinner-border text-success\"\n                            role=\"status\"\n                        >\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                    )}\n                </div>\n\n                <div className=\"col-12 col-lg-5 p-2 text-center\">\n                    <h1>Waiting Approval</h1>\n                    <hr />\n                    {waitingTags.length > 0 ? (\n                        waitingTags.map((value, index) => {\n                            return <p key={value._id}>{value.name}</p>;\n                        })\n                    ) : (\n                        <p>None</p>\n                    )}\n                </div>\n            </div>\n\n            <div\n                className=\"modal fade\"\n                id=\"tagModal\"\n                tabIndex=\"-1\"\n                aria-labelledby=\"tagModalLabel\"\n                aria-hidden=\"true\"\n            >\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"tagModalLabel\">\n                                Add a Tag\n                            </h5>\n                            <button\n                                type=\"button\"\n                                className=\"btn-close\"\n                                data-bs-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                            ></button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form onSubmit={(e) => submitNewTag(e)}>\n                                <div className=\"mb-3\">\n                                    <label\n                                        htmlFor=\"tag-name\"\n                                        className=\"form-label\"\n                                    >\n                                        Name\n                                    </label>\n                                    <input\n                                        type=\"string\"\n                                        className=\"form-control\"\n                                        id=\"tag-name\"\n                                        required\n                                        onChange={(e) =>\n                                            setNewTagName(e.target.value)\n                                        }\n                                    ></input>\n                                </div>\n\n                                <div className=\"mb-3\">\n                                    <label\n                                        htmlFor=\"tag-description\"\n                                        className=\"form-label\"\n                                    >\n                                        Description:\n                                    </label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        id=\"tag-description\"\n                                        rows=\"3\"\n                                        onChange={(e) =>\n                                            setNewTagDescription(e.target.value)\n                                        }\n                                    ></textarea>\n                                </div>\n\n                                <div className=\"mb-3\">\n                                    <label\n                                        htmlFor=\"tag-reason\"\n                                        className=\"form-label\"\n                                    >\n                                        Reasoning for adding:\n                                    </label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        id=\"tag-reason\"\n                                        rows=\"3\"\n                                        onChange={(e) =>\n                                            setNewTagReason(e.target.value)\n                                        }\n                                    ></textarea>\n                                </div>\n\n                                <button\n                                    type=\"button mt-3 float-end\"\n                                    className=\"btn btn-primary\"\n                                >\n                                    Submit Tag\n                                </button>\n                            </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                data-bs-dismiss=\"modal\"\n                                onClick={(e) => closeForm(e)}\n                            >\n                                Close\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Tags;\n","const User = () => {\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col-12 bg-light'>\n                    <p>AHHHHHH</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default User;","import { useEffect, useState } from \"react\";\nimport {Link} from 'react-router-dom';\n\nconst Boards = (props) => {\n    const [boards, setBoards] = useState([]);\n\n    useEffect(() => {\n        if(props.apiURL === '') return;\n        fetch(props.apiURL+'/board', {\n            method:'GET',\n            mode:'cors'\n        })\n        .then(res => res.json())\n        .then(res => {\n            if(typeof res !== 'undefined') {\n                setBoards(res.boards);\n            }\n        })\n    }, [props.apiURL]);\n\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col-12 bg-light text-center p-3'>\n                    <h1>Boards</h1>\n                    <hr/>\n                    {boards.length > 0 ? \n                    \n                    boards.map((value, index) => {\n                        return (<Link key={value._id} to={'/board/'+value._id} className='fs-3' style={{textDecoration:'none'}}><p>{value.name}</p></Link>)\n                    })\n                    \n                    : \n\n                    <div className=\"spinner-border text-success\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Boards;","import {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {DateTime} from 'luxon'\nimport {FaRegTrashAlt} from 'react-icons/fa';\n\nconst Thread = (props) => {\n    const {id} = useParams();\n    const [userId, setUserId] = useState();\n    const [token, setToken] = useState();\n    const [threadData, setThreadData] = useState();\n    const [commentsList, setCommentsList] = useState([]);\n    const [comment, setComment] = useState('');\n    const [refresh, setRefresh] = useState(false);\n    const [threadText, setThreadText] = useState('');\n\n    useEffect(() => {\n        if(localStorage.getItem('token') !== null) {\n            setToken(localStorage.getItem('token'));\n        }\n        if(localStorage.getItem('id') !== null) {\n            setUserId(localStorage.getItem('id'));\n        }\n    }, []);\n\n    useEffect(() => {\n        if(props.apiURL === '') return;\n\n        fetch(props.apiURL +'/thread/'+id, {\n            method: 'GET',\n            mode:'cors'\n        }).then(res => res.json())\n        .then(res => {\n            if(typeof res !== 'undefined') {\n                setThreadData(res.threaddata);\n                setCommentsList(res.comments);\n                setThreadText(res.threaddata.comment);\n            }\n        })\n\n    }, [props.apiURL, id, refresh]);\n\n    const addReplyToComment = (text) => {\n        setComment(comment + '@' + text +'\\n');\n    }\n\n    const deletePost = (e) => {\n        if(props.apiURL === '') return;\n        fetch(props.apiURL +'/thread/'+id, {\n            method: 'DELETE',\n            mode:'cors',\n            headers: { 'Authorization' : 'Bearer ' + token },\n        }).then(res => setRefresh(!refresh))\n    }\n\n    const updatePostText = (e, text) => {\n        if(props.apiURL === '') return;\n\n        fetch(props.apiURL +'/thread/'+id, {\n            method: 'PUT',\n            mode:'cors',\n            body: JSON.stringify({comment:threadText}),\n            headers: { 'Content-Type': 'application/json',\n            'Authorization' : 'Bearer ' + token },\n        }).then(res => setRefresh(!refresh))\n    }\n\n    const submitComment = (e) => {\n        e.preventDefault();\n        if(props.apiURL === '') return;\n        fetch(props.apiURL +'/thread/'+id+'/comment', {\n            method:'POST', \n            mode:'cors',\n            body: JSON.stringify({comment:comment}),\n            headers: { 'Content-Type': 'application/json',\n            'Authorization' : 'Bearer ' + token }\n        }).then(res => setRefresh(!refresh))\n    }\n\n    const deleteComment = (commentid) => {\n        if(props.apiURL === '') return;\n        fetch(props.apiURL + '/thread/'+id+'/comment/'+commentid, {\n            method:'DELETE',\n            mode:'cors',\n            headers: { 'Content-Type': 'application/json',\n            'Authorization' : 'Bearer ' + token }\n        }).then(res => setRefresh(!refresh))\n    }\n\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col-12 bg-light p-3'>\n\n\n                    {typeof threadData !== 'undefined' ? \n                        <div className='lh-1'>\n                            <h1>{threadData.title}</h1>\n                            <p className='mb-2'>Posted by {typeof threadData.author !== 'undefined' ? threadData.author.username: 'DELETED'} on {DateTime.fromISO(threadData.date).toFormat('yyyy LLL dd')}</p>\n                            {typeof threadData.comment !== 'undefined' ? <p className='fs-3' style={{whiteSpace: \"pre-wrap\"}}>{threadData.comment}</p> : null}\n                            {typeof threadData.author !== 'undefined' && threadData.author._id === userId ? \n                            <p><span style={{color:'blue', cursor:'pointer'}} data-bs-toggle=\"modal\" data-bs-target=\"#editCommentModal\">Edit</span> <span style={{color:'blue', cursor:'pointer'}} className='mx-5' onClick={(e) => deletePost(e)}>Delete</span></p>\n                            :\n                            null\n                            } \n                        </div>\n                    \n                    \n                    : <p>Loading...</p>}\n\n                    <hr/>\n                    \n                    \n                    {props.loggedIn === true ? \n                        <form>\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"commentFormTextArea\" className=\"form-label\">Comment</label>\n                                \n                                {comment.length > 0 ?\n                                <textarea className=\"form-control\" id=\"commentFormTextArea\" rows=\"3\" value={comment} onChange={(e) => setComment(e.target.value)}></textarea>\n                                :\n                                <textarea className=\"form-control\" id=\"commentFormTextArea\" rows=\"3\" onChange={e => setComment(e.target.value)}></textarea>\n                                }\n                            </div>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={e => submitComment(e)}>Submit</button>\n                        <hr/>\n                        </form>\n                    :\n                    null\n                    }\n                    {commentsList.length > 0 ? \n                        commentsList.map((value, index) => {\n                            return (\n                                <div key={value._id} style={{backgroundColor:'lightgray', paddingRight:'0'}} className={index + 1 !== commentsList.length ? 'p-3 mb-2 lh-lg' : 'p-3 lh-lg'}>\n                                    <p className='mb-0'>Posted by {typeof value.author !== 'undefined' ? value.author.username : 'DELETED'} on {DateTime.fromISO(value.date).toFormat('yyyy LLL dd')} ID: <span style={{cursor:'pointer', color:'blue'}} onClick={e => addReplyToComment(e.target.textContent)}>{value._id}</span> \n                                    {\n                                        value.author._id === userId ? \n                                        <FaRegTrashAlt color='blue' size='1.5em' cursor='pointer' onClick={e => deleteComment(value._id)}/>\n                                        :\n                                        null\n                                    }\n                                    </p>\n                                    <hr className='mt-0'/>\n                                    <p className='mb-0' style={{whiteSpace: \"pre-wrap\"}}>{value.comment}</p>\n                                </div>\n                            )\n                        })\n                    : \n                    <div style={{backgroundColor:'lightgray', paddingRight:'0'}} className='p-3'>\n                        <p className='mb-0'>No comments in this thread</p>\n                    </div>}\n                </div>\n            </div>\n\n\n                <div className=\"modal fade\" id=\"editCommentModal\" tabIndex=\"-1\" aria-labelledby=\"editCommentModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"editCommentModalLabel\">Edit Comment</h5>\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form>\n                                    <div className=\"mb-3\">\n                                        <label htmlFor=\"threadtextinput\" className=\"form-label\">Text:</label>\n                                        {typeof threadText !== 'undefined' && threadText.length > 0 ? \n                                        <textarea className=\"form-control\" id=\"threadtextinput\" max='10000' value={threadText} onChange={e => setThreadText(e.target.value)} rows=\"4\" ></textarea>\n                                        :\n                                        <textarea className=\"form-control\" id=\"threadtextinput\" max='10000' onChange={e => setThreadText(e.target.value)} rows=\"4\" ></textarea>\n                                        } \n                                    </div>\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={e => updatePostText(e, e.target.value)} data-bs-dismiss=\"modal\">Submit</button>\n                            </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Thread;","import { useParams, Link, useHistory } from \"react-router-dom\";\nimport {useEffect, useState} from 'react';\nimport {DateTime} from 'luxon';\n\nconst Board = (props) => {\n    const history = useHistory();\n    const {id} = useParams();\n    const [threads, setThreads] = useState([]);\n    const [board, setBoard] = useState();\n    const [newThreadTitle, setNewThreadTitle] = useState('');\n    const [newThreadText, setNewThreadText] = useState('');\n    const [token, setToken] = useState('');\n\n    useEffect(() => {\n        if(props.apiURL === '') return;\n        fetch(props.apiURL + '/board/'+id, {\n            method: 'GET',\n            mode: 'cors'\n        }).then(res => res.json())\n        .then(res => {\n            if(typeof res !== 'undefined') {\n                setThreads(res.threads);\n                setBoard(res.board);\n            }\n        })\n    }, [props.apiURL, id]);\n\n    useEffect(() => {\n        if(localStorage.getItem('token') !== null) {\n            setToken(localStorage.getItem('token'));\n        }\n    }, []);\n\n    const submitThread = (e) => {\n        e.preventDefault();\n        if(props.apiURL === '' || board._id === '') return;\n\n        document.getElementById('createThreadModal')\n\n        let requestData = {\n            title: newThreadTitle,\n            comment: newThreadText,\n            boardid: board._id\n        }\n        fetch(props.apiURL+'/thread', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            body: JSON.stringify(requestData),\n            mode:'cors'\n        }).then(res => res.json())\n        .then(res => {\n            if(typeof res !== 'undefined') {\n                history.push('/thread/'+res.id);\n            }\n        })\n    }\n\n    return (\n        <div className='container'>\n            <div className='row mb-3'>\n                <div className='col-12 bg-light p-3'>\n                    {typeof board === 'undefined' ? <h1>Loading...</h1> : \n                    <div className='text-center'>\n                        <h1 >{board.name}</h1>\n                        <p>{board.description}</p>\n                        {props.loggedIn === true ? <button type=\"button\" className=\"btn btn-success\" data-bs-toggle=\"modal\" data-bs-target=\"#createThreadModal\">Create thread</button> : null}\n                    </div>}\n                    <hr/>\n                    {threads.length > 0 ? \n                    threads.map((value, index) => {\n                        return (\n                            <div key={value._id} className='lh-sm'>\n                                <Link to={'/thread/'+value._id} className='fs-3' style={{textDecoration:'none'}}>{value.title}</Link>\n                                \n                                {typeof value.author === 'undefined' ? <p className='mb-0'>Author: DELETED</p> : <p className='mb-0'>Author: {value.author.username}</p>}\n                                <p className='mb-0'>Posted: {DateTime.fromISO(value.date).toFormat('yyyy LLL dd')}</p>\n                                {index + 1 !== threads.length ? <hr/> : null}\n                            </div>\n                        )\n                    })\n                    : \n                    <p>No threads found</p>}\n                </div>\n            </div>\n\n\n            <div className=\"modal fade\" id=\"createThreadModal\" tabIndex=\"-1\" aria-labelledby=\"createThreadModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"createThreadModalLabel\">Create Thread</h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <form>\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"threadname\" className=\"form-label\">Title:</label>\n                                <input type=\"text\" className=\"form-control\" minLength='3' maxLength='50' id=\"threadname\" onChange={e=>setNewThreadTitle(e.target.value)} required/>\n                                </div>\n                                <div className=\"mb-3\">\n                                <label htmlFor=\"threadtextinput\" className=\"form-label\">Text (optional):</label>\n                                <textarea className=\"form-control\" id=\"threadtextinput\" max='10000' rows=\"4\" onChange={e => setNewThreadText(e.target.value)}></textarea>\n                            </div>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={e => submitThread(e)} data-bs-dismiss=\"modal\">Submit</button>\n                        </form>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n\n\n        </div>\n    )\n}\n\nexport default Board;","import {useState, useEffect} from 'react';\nimport { useParams } from \"react-router-dom\";\nimport ChannelList from './channellist';\n\nconst Search = (props) => {\n    const [channels, setChannels] = useState([]);\n    const [totalChannels, setTotalChannels] = useState(0);\n    const [pages, setPages] = useState();\n    let {searchstring, startpos} = useParams();\n\n    useEffect(() => {\n        if(props.apiURL !== '' && searchstring !== '') {\n            let query = searchstring.split('_').join(' ');\n            query = decodeURIComponent(query);\n            document.title = query + ' | ASMRdb' \n            fetch(props.apiURL+'/channel/'+startpos+'/search?query='+query, {\n                method:'GET',\n                mode:'cors'\n            })\n            .then(res => res.json())\n            .then(res => {\n                setChannels(res.channels);\n                setTotalChannels(res.totalChannels);\n                \n                let estimatedPages = Math.ceil(res.totalchannels / 40.0);\n                if(estimatedPages <= 0) {\n                    setPages(1);\n                }\n                else {\n                    setPages(estimatedPages);\n                }\n            });\n        }\n    }, [props.apiURL, searchstring, startpos]);\n\n\n\n    return (\n        <ChannelList channels={channels} totalresults={totalChannels} title={'Search: ' + decodeURIComponent(searchstring.split('-').join(' '))} pages={pages}/>\n    )\n\n}\n\nexport default Search;","import Login from \"./components/login\";\nimport Channel from \"./components/channel\";\nimport ChannelForm from \"./components/channelform\";\nimport Channels from \"./components/channels\";\nimport Register from \"./components/register\";\nimport Home from \"./components/home\";\nimport NavBar from \"./components/navbar\";\nimport Tag from \"./components/tag\";\nimport Tags from \"./components/tags\";\nimport User from \"./components/user\";\nimport Boards from \"./components/boards\";\nimport Thread from \"./components/thread\";\nimport Board from \"./components/board\";\nimport Search from \"./components/search\";\nimport { useEffect, useState } from \"react\";\nimport \"./styles/App.css\";\n\nconst { HashRouter, Switch, Route } = require(\"react-router-dom\");\n\nfunction App() {\n    const [apiURL, setApiUrl] = useState(\"\");\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    const verifyToken = () => {\n        if (localStorage.getItem(\"token\") === null) {\n            return;\n        }\n\n        fetch(\"https://dry-hollows-28901.herokuapp.com/user/verify\", {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n            mode: \"cors\",\n        }).then((res) => {\n            if (res.status === 403 || res.status === 401) {\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"id\");\n                setLoggedIn(false);\n            } else {\n                setLoggedIn(true);\n            }\n        });\n    };\n\n    function setLogin(status) {\n        if (status === false) {\n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"id\");\n            setLoggedIn(false);\n        } else {\n            setLoggedIn(true);\n        }\n    }\n\n    useEffect(() => {}, [loggedIn]);\n\n    useEffect(() => {\n        setApiUrl(\"https://dry-hollows-28901.herokuapp.com\");\n        verifyToken();\n    }, []);\n\n    useEffect(() => {}, [apiURL]);\n\n    return (\n        <div className=\"App\">\n            <div style={{ minHeight: \"97vh\" }}>\n                <HashRouter hashType={\"slash\"}>\n                    <NavBar\n                        setLogin={setLogin}\n                        loggedIn={loggedIn}\n                        apiURL={apiURL === \"\" ? \"\" : apiURL}\n                    />\n                    <Switch>\n                        <Route path=\"/\" exact>\n                            <Home apiURL={apiURL === \"\" ? \"\" : apiURL} />\n                        </Route>\n                        <Route path=\"/channel/:id\" exact>\n                            <Channel\n                                loggedIn={loggedIn}\n                                apiURL={apiURL === \"\" ? \"\" : apiURL}\n                            />\n                        </Route>\n                        <Route path=\"/add\" exact>\n                            <ChannelForm\n                                loggedIn={loggedIn}\n                                apiURL={apiURL === \"\" ? \"\" : apiURL}\n                            />\n                        </Route>\n                        <Route path=\"/boards\" exact>\n                            <Boards\n                                loggedIn={loggedIn}\n                                apiURL={apiURL === \"\" ? \"\" : apiURL}\n                            />\n                        </Route>\n                        <Route path=\"/board/:id\" exact>\n                            <Board\n                                loggedIn={loggedIn}\n                                apiURL={apiURL === \"\" ? \"\" : apiURL}\n                            />\n                        </Route>\n                        <Route path=\"/thread/:id\" exact>\n                            <Thread\n                                loggedIn={loggedIn}\n                                apiURL={apiURL === \"\" ? \"\" : apiURL}\n                            />\n                        </Route>\n                        <Route path=\"/user/:id\" exact>\n                            <User apiURL={apiURL === \"\" ? \"\" : apiURL} />\n                        </Route>\n                        <Route path=\"/register\" exact>\n                            <Register\n                                loggedIn={loggedIn}\n                                apiURL={apiURL === \"\" ? \"\" : apiURL}\n                            />\n                        </Route>\n                        <Route path=\"/tag/:id/:startpos\" exact>\n                            <Tag\n                                loggedIn={loggedIn}\n                                apiURL={apiURL === \"\" ? \"\" : apiURL}\n                            />\n                        </Route>\n                        <Route path=\"/tags\" exact>\n                            <Tags\n                                loggedIn={loggedIn}\n                                apiURL={apiURL === \"\" ? \"\" : apiURL}\n                            />\n                        </Route>\n                        <Route path=\"/login\" exact>\n                            <Login\n                                setLogin={setLogin}\n                                loggedIn={loggedIn}\n                                apiURL={apiURL}\n                            />\n                        </Route>\n                        <Route path=\"/channels/:startpos\" exact>\n                            <Channels\n                                setLogin={setLogin}\n                                loggedIn={loggedIn}\n                                apiURL={apiURL}\n                            />\n                        </Route>\n                        <Route path=\"/search/:searchstring/:startpos\" exact>\n                            <Search apiURL={apiURL === \"\" ? \"\" : apiURL} />\n                        </Route>\n                    </Switch>\n                </HashRouter>\n            </div>\n            <div\n                style={{ backgroundColor: \"black\", minHeight: \"3vh\" }}\n                className=\"text-center mt-3\"\n            >\n                <a\n                    style={{ textDecoration: \"none\", color: \"white\" }}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    href=\"https://github.com/anthony-argel\"\n                >\n                    Developer\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}