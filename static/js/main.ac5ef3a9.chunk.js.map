{"version":3,"sources":["components/login.js","components/channel.js","components/channelform.js","components/channellist.js","components/channels.js","components/register.js","components/home.js","components/navbar.js","components/tag.js","components/tags.js","components/user.js","components/search.js","App.js","index.js"],"names":["Login","props","useState","email","setEmail","password","setPassword","error","setError","useEffect","document","title","className","loggedIn","push","to","onSubmit","e","apiURL","preventDefault","console","log","fetch","method","body","JSON","stringify","headers","mode","then","res","status","json","localStorage","setItem","token","id","setLogin","htmlFor","type","onChange","target","value","Channel","useParams","setToken","channel","setChannel","comment","setComment","commentList","setCommentList","rating","setRating","numberOfRaters","setNumberOfRaters","ratersList","setRatersList","userid","setUserId","personalReviewData","setPersonalReviewData","reviewList","setReviewList","userReviewData","setUserReviewData","formRating","setFormRating","formReview","setFormReview","requestingRefresh","setRequestingRefresh","allTags","setAllTags","channelTags","setChannelTags","ytStatus","setYTStatus","twitterURL","setTwitterURL","niconicoURL","setNiconicoURL","ytAliases","setYTAliases","ytUpdateError","setYTUpdateError","refreshComments","comments","getItem","name","twitter","niconico","aliases","reviews","ratings","avgRating","newRatingsArray","i","length","sort","a","b","DateTime","fromISO","date","toMillis","slice","tags","raterid","_id","style","backgroundColor","role","viewcount","videocount","href","rel","size","color","youtube","data-bs-toggle","data-bs-target","onClick","refreshYTStats","marginBottom","tagId","selectedTag","getElementById","tagid","addTag","list","map","index","data-tag-id","tagname","cursor","idToDelete","deleteTag","minHeight","height","width","Math","max","aria-valuenow","aria-valuemin","aria-valuemax","toFixed","Array","from","querySelectorAll","forEach","input","review","username","toFormat","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","sendRating","sendReview","submitReview","required","placeholder","min","defaultValue","rows","maxLength","sendChannelEdits","aria-describedby","channelid","authorid","float","commentid","deleteComment","ChannelForm","setStatus","setNiconico","setYoutube","setTwitter","redirecting","setRedirecting","redirectURL","setRedirectURL","errors","setErrors","addChannel","ChannelList","totalresults","channels","textDecoration","tagvals","startpos","pageurl","parseInt","aria-disabled","background","pages","ind","Channels","setChannels","totalChannels","setTotalChannels","setPages","totalchannels","estimatedPages","ceil","setUsername","passwordRepeat","setPasswordRepeat","errorList","setErrorList","accountCreated","setAccountCreated","Homepage","setTags","setReviews","stats","setStats","val","users","NavBar","search","setSearch","history","useHistory","sendSearch","split","join","aria-controls","aria-expanded","Tag","tag","setTag","Tags","newTagName","setNewTagName","newTagDescription","setNewTagDescription","newTagReason","setNewTagReason","approvedTags","setApprovedTags","waitingTags","setWaitingTags","refresh","setRefresh","approved","waiting","description","reason","alert","submitNewTag","closeForm","User","Search","searchstring","query","require","HashRouter","Switch","Route","App","setApiUrl","setLoggedIn","removeItem","hashType","path","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ac5ef3a9.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nfunction Login(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(false);\n\n\n    useEffect(() => {\n        document.title = 'ASMRdb';\n    }, [])\n\n    function login(e){\n        if(props.apiURL !== '') {\n            e.preventDefault();\n            console.log('logging in...');\n            fetch(props.apiURL + '/user/login', {\n                method: 'POST',\n                body: JSON.stringify({email: email, password: password}),\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors'\n            })\n            .then(res => {\n                if(res.status !== 200){\n                    setError(true);\n                }\n                else {\n                    return res.json()\n                }\n            })\n            .then(res => {\n                if(res) {\n                    localStorage.setItem('token', res.token);\n                    localStorage.setItem('id', res.id);\n                    props.setLogin(true);\n                }\n            })\n\n        }\n    }\n\n    return(\n    <div className='container'>\n        {props.loggedIn === true ? <Redirect push to='/'/> : null}\n        <div className='row justify-content-center'>\n            <div className='col-12 col-lg-6  bg-light p-4'>\n            <h1 className='text-center'>Login</h1>\n                <form onSubmit={login}>\n                    <div className='mb-3'>\n                        <label htmlFor='email' className='form-label'>Email Address</label>\n                        <input type='email' className='form-control' id='email' \n                            onChange={e => setEmail(e.target.value)}/>\n                    </div>\n                    <div className='mb-3'>\n                        <label htmlFor='password' className='form-label'>Password</label>\n                        <input type='password' className='form-control' id='password'\n                            onChange={e=>setPassword(e.target.value)}/>\n                    </div>\n                    <button type='submit' className='btn btn-primary'>Submit</button>\n                    {error === true ? <p className='text-center text-danger'>Email or password was incorrect. Please try again.</p> : null}\n                </form>\n                <hr/>\n                <div className='text-center'>\n                    <Link to='/register'>Create an Account</Link>\n                </div>\n            </div>\n        </div>\n    </div>)\n}\n\nexport default Login;","import { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport {FaTwitter, FaYoutube} from 'react-icons/fa';\nimport {SiNiconico} from 'react-icons/si';\nimport {MdClose} from 'react-icons/md';\nimport {DateTime} from 'luxon';\n\nfunction Channel(props) {\n    let {id} = useParams();\n    const [token, setToken] = useState('');\n    const [channel, setChannel] = useState();\n    const [comment, setComment] = useState('');\n    const [commentList, setCommentList] = useState([]);\n\n\n    const [rating, setRating] = useState(0); //avg rating?\n    const [numberOfRaters, setNumberOfRaters] = useState(0);\n    const [ratersList, setRatersList] = useState([]);\n    const [userid, setUserId] = useState();\n    const [personalReviewData, setPersonalReviewData] = useState();\n    const [reviewList, setReviewList] = useState([]);\n\n    const [userReviewData, setUserReviewData] = useState([]);\n\n    const [formRating, setFormRating] = useState();\n    const [formReview, setFormReview] = useState();\n\n    const [requestingRefresh, setRequestingRefresh]  = useState(false);\n\n    const [allTags, setAllTags] = useState([]);\n    const [channelTags, setChannelTags] = useState([]);\n\n    const [ytStatus, setYTStatus] = useState();\n    const [twitterURL, setTwitterURL] = useState();\n    const [niconicoURL, setNiconicoURL] = useState();\n    const [ytAliases, setYTAliases] = useState();\n\n    const [ytUpdateError, setYTUpdateError] = useState();\n\n    const refreshComments = () => {\n        if(props.apiURL !== '') {\n            fetch(props.apiURL+'/comment/'+id, {\n                method: 'GET',\n                mode: 'cors'\n            })\n            .then(res => {\n                if(res.status === 200) {\n                    return res.json();\n                }\n            })\n            .then(res=>{\n                setCommentList(res.comments)})\n        }\n    }\n\n    useEffect(() => {\n        if(localStorage.getItem('token') !== null) {\n            setToken(localStorage.getItem('token'));\n        }\n        if(localStorage.getItem('id') !== null) {\n            setUserId(localStorage.getItem('id'));\n        }\n    }, []);\n\n    useEffect(() => {\n        console.log(props.loggedIn);\n        if(props.apiURL !== '') {\n            fetch(props.apiURL+\"/channel/\"+id+'/all', {\n                method: 'GET',\n                mode: 'cors'\n            })\n            .then(res => res.json())\n            .then(res => {\n                document.title = res.channel.name;\n                setChannel(res.channel);\n                setYTStatus(res.channel.status);\n                setTwitterURL(res.channel.twitter);\n                setNiconicoURL(res.channel.niconico);\n                setYTAliases(res.channel.aliases);\n\n                let reviews = res.ratings;\n                let avgRating = 0;\n                let newRatingsArray = [0,0,0,0,0,0,0,0,0,0,0];\n                for(let i = 0; i < reviews.length; i++) {\n                    avgRating += reviews[i].rating;\n                    newRatingsArray[reviews[i].rating]++;\n                }\n\n                reviews.sort((a,b) => {\n                    return DateTime.fromISO(b.date).toMillis() - DateTime.fromISO(a.date).toMillis();})\n                if (reviews.length > 10) {\n                    setReviewList(reviews.slice(0,10))\n                }\n                else {\n                    setReviewList(reviews);\n                }\n                setRatersList(newRatingsArray);\n                if(reviews.length > 0) {\n                    setRating(avgRating / reviews.length);\n                }\n                setNumberOfRaters(reviews.length);\n                setCommentList(res.comments);\n                setAllTags(res.allTags);\n                setChannelTags(res.channel.tags);\n            });\n        }\n    }, [props.apiURL, id, userid, requestingRefresh, props.loggedIn]);\n\n    useEffect(() => {\n    }, [channel]);\n\n    useEffect(() => {\n        if(typeof userid !== 'undefined' && reviewList.length > 0) {\n            for(let i = 0; i < reviewList.length; i++) {\n                if(reviewList[i].raterid._id === userid) {\n                    setPersonalReviewData(reviewList[i]);\n                    break;\n                }\n            }\n        }\n    }, [userid, reviewList]);\n\n    \n\n    const postComment = (e) => {\n        e.preventDefault();\n        if(props.apiURL !== '') {\n            fetch(props.apiURL+\"/comment\", {\n                method: 'POST',\n                body: JSON.stringify({channelid: id, comment:comment}),\n                headers: { 'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + token },\n                mode: 'cors'\n            })\n            .then(res => {\n                if(res.status === 200) {\n                    refreshComments();\n                }\n            })\n        }\n    }\n\n    const deleteComment = (id, authorid) => {\n        if(props.apiURL !== '') {\n            fetch(props.apiURL+'/comment',{\n                method: 'DELETE',\n                body: JSON.stringify({\n                    authorid: authorid,\n                    commentid: id,\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization' : 'Bearer ' + token},\n                mode: 'cors'\n            })\n            .then(res => {\n                if(res.status === 200) {\n                    refreshComments();\n                }\n            })\n        }\n    }\n\n    const submitReview = (e) => {\n        e.preventDefault();\n        let sendRating = 0;\n        console.log('submitting...')\n        let sendReview = ' ';\n        if(typeof formRating === 'undefined') {\n            if(typeof personalReviewData !== 'undefined') {\n                sendRating = personalReviewData.rating;\n            }\n        } else {\n            sendRating = formRating;\n        }\n\n        if(typeof formReview === 'undefined') {\n            if(typeof personalReviewData !== 'undefined') {\n                sendReview = personalReviewData.review;\n            }\n        } else {\n            sendReview = formReview;\n        }\n\n        fetch(props.apiURL+\"/channelrating/\"+id, {\n            method: 'POST',\n            body: JSON.stringify({\n                rating: sendRating,\n                review: sendReview\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + token},\n            mode: 'cors'\n        })\n        .then( res => {\n            if(res.status === 200) {\n                setRequestingRefresh(!requestingRefresh);\n            }\n        }\n        );\n    }\n\n    const deleteReview = () => {\n        if(props.apiURL !== '') {\n            fetch(props.apiURL + '/channelrating/' +id, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization' : 'Bearer ' + token},\n                mode: 'cors'\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    setRequestingRefresh(!requestingRefresh);\n                    Array.from(document.querySelectorAll(\"input\")).forEach(\n                        input => (input.value = \"\")\n                    );\n                    Array.from(document.querySelectorAll(\"textarea\")).forEach(\n                        input => (input.value = \"\")\n                    );\n                    setPersonalReviewData(-1);\n                }\n            })\n        }\n    }\n\n    function addTag(e) {\n        e.preventDefault();\n        if(props.apiURL !== '') {\n            let tagId = 0;\n            let selectedTag = document.getElementById('tag').value;\n            for(let i = 0; i < allTags.length; i++) {\n                if(allTags[i].name === selectedTag) {\n                    tagId = allTags[i]._id;\n                }\n            }\n\n            if(tagId !== 0) {\n                fetch(props.apiURL + '/channel/' +id+'/tag', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        tagid: tagId\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization' : 'Bearer ' + token},\n                    mode: 'cors'\n                })\n                .then(res => {\n                    setRequestingRefresh(!requestingRefresh);\n                })\n            }\n            else {\n            }\n        }\n    }\n\n    function deleteTag(e, idToDelete) {\n        e.preventDefault();\n        if(props.apiURL !== '') {\n            fetch(props.apiURL + '/channel/' +id+'/tag', {\n                method: 'DELETE',\n                body: JSON.stringify({\n                    tagid: idToDelete\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization' : 'Bearer ' + token},\n                mode: 'cors'\n            })\n            .then(res => {\n                setRequestingRefresh(!requestingRefresh);\n            })\n\n        }\n    }\n\n    function sendChannelEdits(e) {\n        e.preventDefault();\n        if(props.apiURL !== '') {\n            fetch(props.apiURL + '/channel/'+id, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    status: ytStatus,\n                    niconico: niconicoURL,\n                    twitter: twitterURL,\n                    aliases: ytAliases\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization' : 'Bearer ' + token},\n                mode: 'cors'\n            })\n            .then(res => setRequestingRefresh(!requestingRefresh));\n        }\n    }\n\n\n    function refreshYTStats(e) {\n        e.preventDefault();\n        if(props.apiURL !== '') {\n            fetch(props.apiURL + '/channel/'+id+'/refresh', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization' : 'Bearer ' + token},\n                mode: 'cors'\n            })\n            .then(res => {\n                if(res.status === 200) {\n                    setRequestingRefresh(!requestingRefresh);\n                }\n                else {\n                    setYTUpdateError('This channel has already been refreshed in the last 24 hours.');\n                }\n            });\n        }\n    }\n\n    return (\n        <div className='container'>\n            \n            {/* header */}\n            <div className='row d-flex justify-content-between'>\n                <div className='bg-light col-12 col-lg-8 p-3' style={{backgroundColor:'green'}}>\n                    {typeof channel === 'undefined' ?  \n                        <div className=\"spinner-border text-success\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        : \n                        <div>\n                            <h1>{channel.name}</h1>\n                            {typeof channel.aliases !== 'undefined' && channel.aliases !== channel.name && channel.aliases !== '' ? <p className='fs-4'>Also Known As: {channel.aliases}</p> : null}\n                            <p>Status: {channel.status}</p>\n                            {typeof channel === 'undefined' ? null :\n                                <div>\n                                    <p># Channel Views: {channel.viewcount}</p>\n                                    <p># Uploaded Videos: {channel.videocount}</p>\n                                </div>\n                            }\n                            \n                            <div className='socials'>\n                                {typeof channel !== 'undefined' && typeof channel.twitter !== 'undefined' && channel.twitter !== '' ?  \n                               <a href={'https://twitter.com/'+channel.twitter} target=\"_blank\" rel=\"noopener noreferrer\" ><FaTwitter size='2em'/></a>\n                               :\n                                null\n                               }\n                               {typeof channel !== 'undefined' && typeof channel.niconico !== 'undefined' && channel.niconico !== '' ?\n                                <a href={'https://ch.nicovideo.jp/'+channel.niconico} target=\"_blank\" rel=\"noopener noreferrer\"><SiNiconico size='2em' color='gray'/></a>\n                                :\n                                null \n                                }\n                                <a href={'https://www.youtube.com/channel/'+channel.youtube} target=\"_blank\" rel=\"noopener noreferrer\" ><FaYoutube color='red' size='2em'/></a>\n\n                            </div>\n                        </div>\n                    }  \n                            <hr/>\n                     {props.loggedIn === true ?        \n                    <button type=\"button\" className=\"btn btn-success\" data-bs-toggle='modal' data-bs-target='#editForm'>Edit Channel Info</button>\n                     :\n                    null}<button type=\"button\" className=\"btn btn-success mx-3\" onClick={(e) => refreshYTStats(e)}>Refresh YouTube Stats</button>\n                    {typeof ytUpdateError !== 'undefined' && ytUpdateError !== '' ? <p className='mt-3' style={{color:'red', marginBottom:'0'}}>{ytUpdateError}</p> : null}    \n                </div>\n\n\n                <div className='bg-light col-12 col-lg-4 p-3' style={{backgroundColor:'green'}}>\n                            <div>\n                            <p className='fs-2 text-center'>Tags</p>\n                            <hr/>\n                            {allTags.length > 0 ? \n                            <form className='mt-3 mb-3' onSubmit={(e) => addTag(e)}>\n                                <label htmlFor='tag'></label>\n                                <input list='tags' name='tag' id='tag'/>\n                                <datalist id='tags'>\n                                    {allTags.map((value, index) => {\n                                        return <option key={value._id} data-tag-id={value._id} value={value.name}></option>\n                                    })}\n                                </datalist>\n                                <button type=\"submit\" className=\"btn btn-success\">Add Tag</button>\n                            </form>\n                            : null}\n                            {channelTags.length > 0 ? \n                            channelTags.map((value, index) => {\n                                return <span className='' key={value._id}><Link to={'/tag/'+value._id+'/1'}>{value.tagname}</Link>\n                                {props.loggedIn === true ? \n                                        <MdClose color='red' size='1.5em' cursor='pointer' onClick={e => deleteTag(e, value._id)}/>\n                                        :\n                                        (index + 1) !== channelTags.length ?\n                                        <span>, </span>\n                                        :\n                                        null\n                                }\n                                </span>\n                            })\n                            : null}\n                            </div>\n                </div>\n            </div>\n\n\n            {/* stats */}\n            <div className='row mt-3 bg-light' style={{minHeight:'25vh'}}>\n                <p className='text-center pt-3 fs-3 mb-0'>Statistics</p><hr/>\n                <div className='col-12 col-lg-6 p-3'>\n                    {ratersList.length > 0 ? \n                        <div>\n                            <p className='text-center'>Ratings</p>\n                            {ratersList.map((value, index) => {\n                                return (\n                                    <div key={`review-count-${index}`}>\n                                        \n                                        <div className=\"progress mt-3\" style={{height:'1.7em'}}>\n                                            <p>{index}:</p>\n                                            <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${value / Math.max(...ratersList) * 100}%`}} aria-valuenow={value} aria-valuemin=\"0\" aria-valuemax={Math.max(...ratersList)}>{value}</div>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div> \n                        : null}\n                        <hr/>\n                    <div className='text-center'>\n                        <p className='mt-3'>Average Rating: {rating === 10 ? rating : rating.toFixed(1)}/10 (votes: {numberOfRaters})</p>\n\n                        <p>Your Rating: {typeof personalReviewData === 'undefined' || personalReviewData === -1 ?\n                        '-' : \n                        <span>{personalReviewData.rating}<MdClose cursor='pointer' color='red' size='1.5em' onClick={() => deleteReview()}/></span>}</p> \n\n                        <button type=\"button\" className=\"btn btn-success\" data-bs-toggle='modal' data-bs-target='#reviewForm'>\n                        {typeof personalReviewData === 'undefined' || personalReviewData === -1 ? 'Add Review' : 'Edit Review'}</button>\n\n\n                    </div>\n\n                        \n                </div>\n                \n                <div className='col-12 col-lg-6 d-flex flex-column align-items-center p-3'>\n                    <p>Recent Reviews</p>\n                    {reviewList.length > 0 ? \n                    reviewList.map((value, index) => {\n                       return <p key={`latest-reviews-${index}`} style={{cursor:'pointer', color:'blue'}} data-bs-toggle='modal' \n                       data-bs-target='#reviewShow' onClick={() => setUserReviewData([value.review, value.rating, value.raterid.username])}>\n                           {value.raterid.username} {value.rating}/10 - {DateTime.fromISO(value.date).toFormat('yyyy LLL dd')}</p>\n                    })\n                    : <p>None</p>}\n                </div>\n            </div>\n\n            {/* Modal Specific Review */}\n            <div className=\"modal fade\" id=\"reviewShow\" tabIndex=\"-1\" aria-labelledby=\"reviewShowLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"reviewShowLabel\">{userReviewData[2]}'s review <br/>{userReviewData[1]}/10</h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <p>{typeof userReviewData[0] !== 'undefined' ? userReviewData[0] : 'User did not write a review.'}</p>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n\n            {/* Modal Review */}\n            <div className=\"modal fade\" id=\"reviewForm\" tabIndex=\"-1\" aria-labelledby=\"reviewFormLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"reviewFormLabel\">Review</h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <form onSubmit={(e) => submitReview(e)}>\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"reviewRating\" className=\"form-label\">Rating</label>\n                                <div className='input-group'>\n                                    {typeof personalReviewData === 'undefined' ? <input type=\"number\" className=\"form-control\" id=\"reviewRating\" required onChange={e => setFormRating(e.target.value)} placeholder=\"0-10\" min='0' max='10'/> : \n                                    <input type=\"number\" className=\"form-control\" id=\"reviewRating\" required onChange={e => setFormRating(e.target.value)} placeholder=\"7\" defaultValue={personalReviewData.rating} min='0' max='10'/>}\n                                    \n                                    <span className=\"input-group-text\" id=\"basic-addon2\">/10</span>\n                                </div>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"reviewText\" className=\"form-label\">Review</label>\n                                {typeof personalReviewData === 'undefined' ? <textarea className=\"form-control\" id=\"reviewText\" onChange={e => setFormReview(e.target.value)} rows=\"3\" placeholder='optional' maxLength='1000'></textarea> : \n                                <textarea className=\"form-control\" id=\"reviewText\" onChange={e => setFormReview(e.target.value)} rows=\"3\" placeholder='optional' defaultValue={personalReviewData.review} maxLength='1000'></textarea>}\n                                \n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary mt-3 float-end\" >Post Review</button>\n                        </form>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n            {/* Modal Edit */}\n            <div className=\"modal fade\" id=\"editForm\" tabIndex=\"-1\" aria-labelledby=\"editFormLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"reviewFormLabel\">Info</h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <form onSubmit={(e) => sendChannelEdits(e)}>\n                        <label htmlFor='status'>YouTube Status:</label>\n                            <select className=\"form-select\" aria-label=\"Activity Select\" required id='status' value={ytStatus} onChange={e => setYTStatus(e.target.value)}>\n\n                                <option value=\"Active\">Active</option>\n                                <option value=\"Inactive\">Inactive</option>\n                                <option value=\"Unknown\">Unknown</option>\n                            </select>\n\n\n                            <label htmlFor=\"twitter\" className=\"form-label\">Twitter:</label>\n                            <div className=\"input-group mb-3\">\n                                <span className=\"input-group-text\" id=\"basic-addon3\">@</span>\n                                {typeof twitterURL !== 'undefined' ? \n                                <input type=\"text\" className=\"form-control\" id=\"twitter\" aria-describedby=\"basic-addon3\" defaultValue={twitterURL} onChange={e => setTwitterURL(e.target.value)}/>\n                                :    \n                                <input type=\"text\" className=\"form-control\" id=\"twitter\" aria-describedby=\"basic-addon3\" onChange={e => setTwitterURL(e.target.value)}/>\n                            }\n                            </div>\n\n\n                            <label htmlFor=\"nnd\" className=\"form-label\">Niconico:</label>\n                            <div className=\"input-group mb-3\">\n                                <span className=\"input-group-text\" id=\"basic-addon3\">https://ch.nicovideo.jp/</span>\n                                {typeof niconicoURL !== 'undefined' ?\n                                <input type=\"text\" className=\"form-control\" id=\"nnd\" aria-describedby=\"basic-addon3\" defaultValue={niconicoURL} onChange={e => setNiconicoURL(e.target.value)}/>\n                                :\n                                <input type=\"text\" className=\"form-control\" id=\"nnd\" aria-describedby=\"basic-addon3\" onChange={e => setNiconicoURL(e.target.value)}/>\n                                }\n                            </div>\n\n\n                            <label htmlFor='alias' className='form-label'>Aliases:</label>\n                            {typeof ytAliases !== 'undefined' ? \n                            <textarea className='form-control' id='alias' rows='3' defaultValue={ytAliases} onChange={e => setYTAliases(e.target.value)}></textarea>\n                            : <textarea className='form-control' id='alias' rows='3' onChange={e => setYTAliases(e.target.value)}></textarea>}\n                            <button type=\"submit\" className=\"btn btn-primary mt-3 float-end\" >Submit Changes</button>\n\n                        </form>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n            {/* comment section */}\n            <div className='row mt-3 mb-3'>\n                <div className='col-12 bg-light' style={{backgroundColor:'green'}}>\n                    <form onSubmit={postComment}>\n                        <label htmlFor='comment-form' className='form-label mt-3'>Add a comment</label>\n                        <textarea className='form-control mb-3' id='comment-form' rows='3' onChange={e => setComment(e.target.value)}/>\n                        <button type='submit' className='btn btn-primary'>Submit</button>\n                    </form>\n                    <hr/>\n                    <p className='fs-2 text-center'>Comments</p>\n                    <div className='comment-area'>\n                        {typeof commentList !== 'undefined' && commentList.length > 0 ? \n                        commentList.map((value, index) => {\n                            return  <div key={value.authorid._id + index}>\n                                    <p className='fs-2 fw-bold'>{value.authorid.username}<span className='fs-5 fw-normal'> {DateTime.fromISO(value.date).toFormat('yyyy LLL dd')}</span>\n                                    \n                                    {typeof userid !== 'undefined' && value.authorid._id === userid ? <MdClose color='red' cursor='pointer' size='1.3em' style={{float: 'right'}} onClick={()=> deleteComment(value._id, value.authorid._id)}/>: null}</p>\n                                    <p className='fs-5'>{value.comment}</p>\n                                    {index !== commentList.length - 1 ? <hr/> : null}\n                                </div>  \n                        })\n                        : <p>No comments</p>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Channel;","import { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\n\nconst ChannelForm = (props) => {\n    const [status, setStatus] = useState('Active');\n    const [niconico, setNiconico] = useState('');\n    const [youtube, setYoutube] = useState();\n    const [twitter, setTwitter] = useState();\n    const [redirecting, setRedirecting] = useState(false);\n    const [redirectURL, setRedirectURL] = useState('');\n    const [token, setToken] = useState('');\n    const [errors, setErrors] = useState(false);\n\n    useEffect(() => {\n        document.title = 'Channel Form | ASMRdb';\n        if(localStorage.getItem('token') !== null) {\n            setToken(localStorage.getItem('token'));\n        }\n\n    }, [])\n\n    function addChannel(e) {\n        e.preventDefault();\n        if(props.apiURL !== '' && token !== '') {\n            fetch(props.apiURL+'/channel', {\n                method: 'POST',\n                mode:'cors',\n                body: JSON.stringify({status, niconico, youtube, twitter}),\n                headers: { 'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + token },\n            })\n            .then(res => {\n                if(res.status !== 400) {\n                    return res.json()\n                }\n                else {\n                    setErrors(true);\n                }\n            })\n            .then(res => {\n                if(typeof res !== 'undefined') {\n                    setRedirectURL('/channel/'+res.channelid[0]._id);\n                }\n            });\n        }\n    }\n\n    useEffect(() => {\n        if(redirectURL !== '') {\n            setRedirecting(true);\n        }\n    }, [redirectURL]);\n\n\n\n    return (\n        <div className='container'>\n            {props.loggedIn !== true ? <Redirect to={'/login'}/> : null}\n            {redirecting === true ? <Redirect to={redirectURL}/>: null}\n            <div className='row d-flex justify-content-center mb-3'>\n                <div className='col-12 col-lg-6 bg-light p-2'>\n                    <h1 className='text-center'>Channel Form</h1>\n                    <form onSubmit={e => addChannel(e)}>\n                        <label htmlFor=\"youtube-url\" className=\"form-label\">YouTube URL</label>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"basic-addon3\">https://www.youtube.com/channel/</span>\n                            <input type=\"text\" required className=\"form-control\" id=\"youtube-url\" aria-describedby=\"basic-addon3\" onChange={e=>setYoutube(e.target.value)}/>\n                        </div>\n\n\n\n\n                        <label htmlFor='status'>YouTube Status:</label>\n                        <select className=\"form-select\" aria-label=\"Activity Select\" required id='status' onChange={e => setStatus(e.target.value)}>\n                            <option value=\"Active\">Active</option>\n                            <option value=\"Inactive\">Inactive</option>\n                            <option value=\"Unknown\">Unknown</option>\n                        </select>\n\n\n                        <hr/>\n                        <p>Optional Socials:</p>\n\n\n\n\n                        <label htmlFor=\"twitter\" className=\"form-label\">Twitter:</label>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"basic-addon3\">@</span>\n                            <input type=\"text\" className=\"form-control\" id=\"twitter\" aria-describedby=\"basic-addon3\" onChange={e => setTwitter(e.target.value)}/>\n                        </div>\n\n\n                        <label htmlFor=\"nnd\" className=\"form-label\">Niconico:</label>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"basic-addon3\">https://ch.nicovideo.jp/</span>\n                            <input type=\"text\" className=\"form-control\" id=\"nnd\" aria-describedby=\"basic-addon3\" onChange={e => setNiconico(e.target.value)}/>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-success mt-3\">Add Channel</button>\n                    </form>\n                    {errors === true ? \n                    <div className='mt-3'>\n                        <p>Something went wrong. Please make sure your input only contains:</p>\n                        <ul>\n                            <li>numbers and letters (a - z, A - Z, 0 - 9)</li>\n                            <li>spaces, underscores, and dashes ( , _, -)</li>\n                        </ul>\n                        </div> : null}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChannelForm;","import {Link} from 'react-router-dom';\n\nconst ChannelList = (props) => {\n    return (\n        <div className='container'>\n            <div className='row bg-light p-2 mb-4'>\n                <div className='col'>\n                    <h1 className='text-center'>{props.title}\n                    {typeof props.totalresults !== 'undefined' && props.totalresults !== '' ? <span className='fs-5'> ~{props.totalresults} result(s) found</span> : null}</h1>\n                    <hr/> \n                    {props.channels.length > 0 ? \n                        props.channels.map((value, index) => {\n                            return (         \n                                <Link to={'/channel/'+value._id} key={value._id} style={{textDecoration:'none', color:'black'}}>   \n                                    <div className='lh-1'> \n                                        <p className='fs-4 fw-bold'>{value.name}</p>\n                                        <p>Videos: {value.videocount}</p>\n                                        <p>Tags: {value.tags.map((tagvals, index) => {\n                                            return (\n                                                <span key={tagvals._id}>{tagvals.tagname}{index + 1 !== value.tags.length ? ', ' : ' '}</span>\n                                            )\n                                        })}</p>\n                                    </div>\n                                    {index + 1 !== props.channels.length ? <hr/> : null}\n                                </Link>\n                            )\n                        })\n                    :\n                    <div>\n                        <p>No matches found</p>\n                    </div>\n                    }\n                </div>\n            </div>\n\n\n        <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n            {\n                props.startpos === '1' ?\n                <li className=\"page-item disabled\" >\n                <Link className=\"page-link\" to={`${props.pageurl}${parseInt(props.startpos) - 1}`} tabIndex=\"-1\" aria-disabled=\"true\">&lt;&lt;</Link>\n                </li> :\n                <li className=\"page-item\">\n                <Link className=\"page-link\" to={`${props.pageurl}${parseInt(props.startpos) - 1}`} tabIndex=\"-1\" aria-disabled=\"true\">&lt;&lt;</Link>\n                </li>\n            }{\n                props.startpos === '1' ? \n                <li className=\"page-item\" ><Link className=\"page-link\" style={{background: \"#0d6efd\", color:\"#fff\"}} to={`${props.pageurl}1`}>1</Link></li> :\n                <li className=\"page-item\"><Link className=\"page-link\" to={`${props.pageurl}1`}>1</Link></li>\n            }\n            {props.pages >= 2 ? \n            [...Array(props.pages)].map((value, ind) => {\n                if(ind === 0) return null;\n                return (\n                    ind + 1=== parseInt(props.startpos) ? \n                        <li className=\"page-item\" \n                        key={ind}><Link className=\"page-link\" to={`${props.pageurl}${ind + 1}`} style={{background: \"#0d6efd\", color:\"#fff\"}}>{ind + 1}</Link></li> : \n\n                        <li className=\"page-item\" \n                        key={ind}><Link className=\"page-link\" to={`${props.pageurl}${ind + 1}`}  >{ind + 1}</Link></li>\n                )\n            })\n            :\n            null\n            }\n            {\n                parseInt(props.startpos) + 1 <= props.pages ?\n                <li className=\"page-item\">\n                <Link className=\"page-link\" to={`${props.pageurl}${parseInt(props.startpos) + 1}`}>&gt;&gt;</Link>\n                </li>\n                :\n                <li className=\"page-item disabled\">\n                <Link className=\"page-link\" to={`${props.pageurl}${parseInt(props.startpos) + 1}`} tabIndex=\"-1\" aria-disabled=\"true\">&gt;&gt;</Link>\n                </li>\n            }\n        </ul>\n        </nav>\n\n        </div>\n    )\n}\n\nexport default ChannelList;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ChannelList from './channellist';\n\nconst Channels = (props) => {\n    const [channels, setChannels] = useState([]);\n    const [totalChannels, setTotalChannels] = useState(0);\n    const [pages, setPages] = useState();\n    let {startpos} = useParams();\n\n    useEffect(() => {\n        document.title = 'Channels | ASMRdb';\n        if(props.apiURL !== '' && typeof startpos !== 'undefined') {\n            fetch(props.apiURL+'/channel/limit/'+startpos,{\n                method: 'GET',\n                mode: 'cors'\n            })\n            .then(res => {\n                if(res.status !== 400) {\n                    return res.json();\n                }\n            })\n            .then(res => {\n                if(typeof res === 'undefined') {return;}\n                setChannels(res.channels)\n                setTotalChannels(res.totalchannels);\n                let estimatedPages = Math.ceil(res.totalchannels / 40.0);\n                if(estimatedPages <= 0) {\n                    setPages(1);\n                }\n                else {\n                    setPages(estimatedPages);\n                }\n            }   \n            );\n        }\n    }, [props.apiURL, startpos])\n\n    return (\n        <div>\n        <ChannelList channels={channels} title={'Channels'} totalresults={totalChannels} startpos={startpos} pages={pages} pageurl={'/channels/'}/>\n            \n        </div>\n    )\n}\n\nexport default Channels;","import {useState} from 'react';\nimport { Redirect } from 'react-router-dom';\n\nfunction Login(props) {\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n    const [errorList, setErrorList] = useState([]);\n    const [accountCreated, setAccountCreated] = useState(false);\n\n\n\n    function register(e){\n        if(props.apiURL !== '') {\n            e.preventDefault();\n            if(passwordRepeat === password) {\n                fetch(props.apiURL + '/user', {\n                    method: 'POST',\n                    body: JSON.stringify({username:username, email: email, password: password, passwordRepeat: passwordRepeat}),\n                    headers: { 'Content-Type': 'application/json' },\n                    mode: 'cors'\n                })\n                .then(res => {\n                    if(res.status === 200) {\n                        setAccountCreated(true);\n                        return;\n                    }\n                    return res.json();\n                })\n                .then(res => {\n                    if(typeof res === 'undefined') {\n                        return;\n                    }\n                    if(typeof res.errors !== 'undefined' || res.errors.length > 0) {\n                        setErrorList(res.errors);\n                    }\n                    else {\n                        setAccountCreated(true);\n                    }\n                });\n            }\n            else { \n                setErrorList(['Passwords do not match.']);\n            }\n        }\n\n        \n    }\n\n\n    return(\n    <div className='container'>\n        {accountCreated === true ? <Redirect push to='/login'/> : null}\n        {props.loggedIn === true ? <Redirect push to='/'/> : null}\n        <div className='row justify-content-center'>\n            <div className='col-12 col-lg-6 bg-light p-4'>\n            <h1 className='text-center'>Register</h1>\n                <form onSubmit={register}>\n                    <div className='mb-3'>\n                        <label htmlFor='username' className='form-label'>Username</label>\n                        <input type='string' className='form-control' id='username' required\n                            onChange={e => setUsername(e.target.value)}/>\n                    </div>\n\n                    <div className='mb-3'>\n                        <label htmlFor='email' className='form-label'>Email Address</label>\n                        <input type='email' className='form-control' id='email'  required\n                            onChange={e => setEmail(e.target.value)}/>\n                    </div>\n                    <div className='mb-3'>\n                        <label htmlFor='password' className='form-label'>Password</label>\n                        <input type='password' className='form-control' id='password' required\n                            onChange={e=>setPassword(e.target.value)}/>\n                    </div>\n                    <div className='mb-3'>\n                        <label htmlFor='passwordrepeat' className='form-label'>Password Repeated</label>\n                        <input type='password' className='form-control' id='passwordrepeat' required\n                            onChange={e=>setPasswordRepeat(e.target.value)}/>\n                    </div>\n                    <button type='submit' className='btn btn-primary'>Submit</button>\n                    {errorList.length > 0 ? \n                        <div className='text-center mt-3'>\n                            {errorList.map((value, index) => {\n                                return <p key={index} className='text-danger'>{value}</p>\n                            })}\n                        </div>\n                    : null}\n                </form>\n            </div>\n        </div>\n    </div>)\n}\n\nexport default Login;","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Homepage = (props) => {\n    const [channels, setChannels] = useState([]);\n    const [tags, setTags] = useState([]);\n    const [reviews, setReviews] = useState([]);\n    const [stats, setStats] = useState([]);\n\n    useEffect(() => {\n        document.title = 'ASMRdb';\n    }, []);\n\n    useEffect(() => {\n        if(props.apiURL !== '') {\n            fetch(props.apiURL+'/channel/latest', {\n                method:\"GET\",\n                mode:'cors'\n            })\n            .then( res => res.json())\n            .then( res => setChannels(res.channels));\n\n\n\n            fetch(props.apiURL+'/tag/latest', {\n                method:\"GET\",\n                mode:'cors'\n            })\n            .then( res => res.json())\n            .then( res => setTags(res.tags));\n\n\n\n            fetch(props.apiURL+'/channelrating/latest', {\n                method:\"GET\",\n                mode:'cors'\n            })\n            .then( res => res.json())\n            .then( res => setReviews(res.reviews));\n\n            fetch(props.apiURL+'/statistics', {\n                method:\"GET\",\n                mode:'cors'\n            })\n            .then( res => res.json())\n            .then( res => setStats(res));\n        }\n    }, [props.apiURL])\n\n    return (\n        <div className='container'>\n            <div className='row bg-light mb-3 p-2'> \n                <h1>ASMR Database</h1>\n                <hr/>\n                <p>The goal of ASMRdb.net is document all ASMR YouTubers. <br/>By collecting them all in one place, ASMR enthusiasts will have an easier time looking for new channels to listen to. This website is built as a wiki, so feel free to add channels, tags, and join in on discussions.</p>\n            </div>\n\n            <div className='row bg-light mb-3 p-2'>\n                <div className='col-12'>\n                    <h2 className='text-center'>Recently Added</h2>\n                    <hr/>\n                    {channels.length > 0 ? \n                    <div className='row'>\n                    {channels.map((value) => {\n                        return (        \n                            <Link to={'/channel/'+value._id} key={value._id} className='col-4' style={{textDecoration:'none', color:'black'}}>   \n                                <div className='card h-100'> \n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">{value.name}</h5>\n                                        <p className=\"card-text\">Videos: {value.videocount}</p>\n                                        {\n                                            typeof value.tags !== 'undefined' && value.tags.length > 0 ?\n                                                <p>\n                                                    {value.tags.map((val, ind) => {\n                                                        return <span>{val.tagname}{ind + 1 !== value.tags.length ? ', ' : ' '}</span>\n                                                    })}\n                                                </p>\n                                                :\n                                                null\n                                        }\n                                        \n                                    </div>\n                                </div>\n                            </Link>\n                        )\n                    })}\n                    </div>\n                    : \n                    <div className=\"spinner-border text-success\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>}\n                </div>\n            </div>\n\n            <div className='row bg-light p-2 mb-3'>\n                <div className='col-12 col-lg-4'>\n                    <h2 className='text-center'>Latest Tags</h2>\n                    <hr/>\n                        {tags.length > 0 ? \n                            tags.map((value) => {\n                                return (\n                                <Link key={value._id} to={'/tag/' +value._id +'/1'}>\n                                    <p>{value.name}</p>\n                                </Link>\n                                )\n                            })\n                        :  \n                        <div className=\"spinner-border text-success\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        }\n                </div>\n                <div className='col-12 col-lg-4 text-center '>\n                    <h2>Latest Reviews</h2>\n                    <hr/>\n                    {reviews.length > 0 ? \n                    reviews.map(value => {\n                        return (\n                            <div key={value._id}>\n                                <p className='text-start'><Link to={'/channel/'+value.channelid._id}>{value.channelid.name}</Link> - {value.rating}/10</p>\n                            </div>\n                        )\n                    })\n                    :\n                    null}\n                </div>\n                <div className='col-12 col-lg-4'>\n                    <h2 className='text-center'>Statistics</h2>\n                    <hr/>\n                    {typeof stats !== 'undefined' ?\n                        <div>\n                            <p>Users: {stats.users}</p>\n                            <p>Channels: {stats.channels}</p>\n                            <p>Tags: {stats.tags}</p>\n                            <p>Reviews: {stats.reviews}</p>\n                        </div>\n                    :\n                    <div className=\"spinner-border text-success\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                    }\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Homepage;","import {Link, useHistory} from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport {FaSearch} from 'react-icons/fa';\n\nconst NavBar = (props) => {\n    const [search, setSearch] = useState('');\n    const history = useHistory();\n\n    const sendSearch = (e) => {\n        e.preventDefault();\n        if(props.apiURL !== '') {\n            history.push('/search/'+search.split(' ').join('_')+'/1')\n        }\n    }\n    return (\n        <nav className='navbar navbar-light navbar-expand-md shadow mb-5' style={{backgroundColor:\"black\"}}>\n            <div className='container'>\n                <Link to='/' className='navbar-brand text-white'>Home</Link>\n\n                \n               \n\n                <div className='collapse navbar-collapse d-flex ' id='navContent-l'>\n                    <ul className='navbar-nav'>\n                        <li className='nav-item'>\n                            <Link to='/channels/1' className='nav-link text-white'>Channels</Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link to='/tags' className='nav-link text-white'>Tags</Link>\n                        </li>\n                        <li className='nav-item'>\n                            {props.loggedIn === true ? \n                            <Link to='/add' className='nav-link text-white'>Add Channel</Link>\n                            :\n                            null}\n                        </li>\n                    </ul>\n                </div>\n\n                <button className='navbar-toggler' type='button' data-bs-toggle='collapse' data-bs-target='#navContent-r' aria-controls='navContent-r' aria-expanded='false' aria-label='Toggle navigation'>\n                    <span className='navbar-toggler-icon'></span>\n                </button>\n                <div className='collapse navbar-collapse d-flex justify-content-end' id='navContent-r'>\n                    <ul className='navbar-nav'>\n                        <form className=\"form-inline my-2 my-lg-0 d-flex\" onSubmit={e => sendSearch(e)}>\n                            <input className=\"form-control mr-sm-2 rounded-start\" type=\"text\" onChange={(e) => setSearch(e.target.value)} name='query' placeholder=\"Search...\" aria-label=\"Search\"/>\n                            <button className=\"btn btn-outline-success my-2 my-sm-0\" style={{backgroundColor:'darkGreen'}} ><FaSearch onClick={e => sendSearch(e)} color='black'/></button>\n                        </form>\n                        {!props.loggedIn ? <li className='nav-item'><Link to='/login' className='nav-link text-white'>Login</Link></li> : <li onClick={() => props.setLogin(false)} className='nav-item nav-link text-white' style={{cursor:'pointer'}}>Log Out</li>}\n                    </ul>\n                </div>\n\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ChannelList from './channellist';\n\nconst Tag = (props) => {\n    let {id, startpos} = useParams();\n    const [channels, setChannels] = useState([]);\n    const [tag, setTag] = useState();\n    const [totalChannels, setTotalChannels] = useState(0);\n    const [pages, setPages] = useState();\n\n    useEffect(() => {\n        if(props.apiURL !== '') {\n            fetch(props.apiURL+'/tag/'+id+'/channels/'+startpos, {\n                method: 'GET',\n                mode:'cors'\n            })\n            .then(res => res.json())\n            .then(res => {\n                setChannels(res.channels); \n                setTotalChannels(res.totalchannels);\n                setTag(res.tag);\n                let estimatedPages = Math.ceil(res.totalchannels / 40.0);\n                if(estimatedPages <= 0) {\n                    setPages(1);\n                }\n                else {\n                    setPages(estimatedPages);\n                }\n            });\n        }\n    }, [props.apiURL, id, startpos])\n\n    useEffect(() => {\n    }, [channels]);\n\n    useEffect(() => {\n        if(typeof tag !== 'undefined' && tag.name !== '') {\n            document.title = tag.name + \" | ASMRdb\";\n        }\n    }, [tag]);\n\n    \n\n    return (\n        <ChannelList pageurl={`/${id}/`} pages={pages} startpos={startpos} totalresults={totalChannels} channels={channels} title={typeof tag !== 'undefined' ? 'Tag: ' + tag.name : 'Tag: '}/>\n    )\n}\n\nexport default Tag;","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Tags = (props) => {\n    const [newTagName, setNewTagName] = useState('');\n    const [newTagDescription, setNewTagDescription] = useState('');\n    const [newTagReason, setNewTagReason] = useState('');\n    const [token, setToken] = useState('');\n    const [approvedTags, setApprovedTags] = useState([]);\n    const [waitingTags, setWaitingTags] = useState([]);\n    const [refresh, setRefresh] = useState(false);\n\n    useEffect(() => {\n        document.title = 'Tags | ASMRdb';\n        if(localStorage.getItem('token') !== null) {\n            setToken(localStorage.getItem('token'));\n        }\n\n        if(props.apiURL !== '') {\n            fetch(props.apiURL+\"/tag\", {\n                method: 'GET',\n                mode: 'cors'\n            })\n            .then(res => res.json())\n            .then(res => {\n                setApprovedTags(res.approved.sort((a,b) => {return a.name > b.name}));\n                setWaitingTags(res.waiting);\n            })\n        }\n    }, [props.apiURL, refresh])\n\n    useEffect(() => {\n    }, [approvedTags])\n\n    function submitNewTag(e) {\n        e.preventDefault();\n        if(props.apiURL !== '') {\n            fetch(props.apiURL+\"/tag\", {\n                method: 'POST',\n                body: JSON.stringify({name: newTagName, description: newTagDescription, reason: newTagReason}),\n                headers: { 'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + token },\n                mode: 'cors'\n            })\n            .then(res => {\n                if(res.status === 200) {\n                    setRefresh(!refresh);\n                    alert('sent');\n                }\n            })\n        }\n    }\n\n    function closeForm(e) {\n        e.preventDefault();\n            Array.from(document.querySelectorAll(\"input\")).forEach(\n                input => (input.value = \"\")\n            );\n            Array.from(document.querySelectorAll(\"textarea\")).forEach(\n                input => (input.value = \"\")\n            );\n            setNewTagName('');\n            setNewTagDescription('');\n            setNewTagReason('');\n    }\n\n    return(\n        <div className='container'>\n            <div className='row bg-light'>\n                <div className='col-12 col-lg-2 p-2 text-center'>\n                    <button type=\"button\" className=\"btn btn-success\" data-bs-toggle=\"modal\" data-bs-target=\"#tagModal\">Add A New Tag</button>\n                </div>\n                <div className='col-12 col-lg-5 p-2 text-center'>\n                    <h1>Tags</h1>\n                    <hr/>\n\n\n                    {approvedTags.length > 0 ? \n                    approvedTags.map((value, index) => {\n                        return <p key={value._id}><Link  to={'/tag/'+value._id+'/1'}>{value.name}</Link></p>\n                    })\n                    :\n                    <div className=\"spinner-border text-success\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                    }\n                </div>\n\n                <div className='col-12 col-lg-5 p-2 text-center'>\n                    <h1>Waiting Approval</h1>\n                    <hr/>\n                    {waitingTags.length > 0 ? \n                    waitingTags.map((value, index) => {\n                        return <p key={value._id}>{value.name}</p>\n                    })\n                    :\n                    <p>None</p>\n                    }\n                </div>\n\n            </div>\n\n\n\n\n            <div className=\"modal fade\" id=\"tagModal\" tabIndex=\"-1\" aria-labelledby=\"tagModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"tagModalLabel\">Add a Tag</h5>\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div className=\"modal-body\">\n                    <form onSubmit={(e) => submitNewTag(e)}>\n                        <div className='mb-3'>\n                            <label htmlFor='tag-name' className='form-label'>Name</label>\n                            <input type='string' className='form-control' id='tag-name' required onChange={e => setNewTagName(e.target.value)}></input>\n                        </div>\n\n                        <div className=\"mb-3\">\n                        <label htmlFor=\"tag-description\" className=\"form-label\">Description:</label>\n                        <textarea className=\"form-control\" id=\"tag-description\" rows=\"3\" onChange={e=>setNewTagDescription(e.target.value)}></textarea>\n                        </div>\n\n                        <div className=\"mb-3\">\n                        <label htmlFor=\"tag-reason\" className=\"form-label\">Reasoning for adding:</label>\n                        <textarea className=\"form-control\" id=\"tag-reason\" rows=\"3\" onChange={e=>setNewTagReason(e.target.value)}></textarea>\n                        </div>\n\n                        <button type=\"button mt-3 float-end\" className=\"btn btn-primary\">Submit Tag</button>\n                    </form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={(e) => closeForm(e)}>Close</button>\n                </div>\n                </div>\n            </div>\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </div>\n    )\n}\n\nexport default Tags;","const User = () => {\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col-12 bg-light'>\n                    <p>AHHHHHH</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default User;","import {useState, useEffect} from 'react';\nimport { useParams } from \"react-router-dom\";\nimport ChannelList from './channellist';\n\nconst Search = (props) => {\n    const [channels, setChannels] = useState([]);\n    const [totalChannels, setTotalChannels] = useState(0);\n    const [pages, setPages] = useState();\n    let {searchstring, startpos} = useParams();\n\n    useEffect(() => {\n        if(props.apiURL !== '' && searchstring !== '') {\n            let query = searchstring.split('_').join(' ');\n            document.title = query + ' | ASMRdb' \n            fetch(props.apiURL+'/channel/'+startpos+'/search?query='+query, {\n                method:'GET',\n                mode:'cors'\n            })\n            .then(res => res.json())\n            .then(res => {\n                setChannels(res.channels);\n                setTotalChannels(res.totalChannels);\n                \n                let estimatedPages = Math.ceil(res.totalchannels / 40.0);\n                if(estimatedPages <= 0) {\n                    setPages(1);\n                }\n                else {\n                    setPages(estimatedPages);\n                }\n            });\n        }\n    }, [props.apiURL, searchstring, startpos]);\n\n\n\n    return (\n        <ChannelList channels={channels} totalresults={totalChannels} title={'Search: ' + searchstring.split('-').join(' ')} pages={pages}/>\n    )\n\n}\n\nexport default Search;","import Login from './components/login';\nimport Channel from './components/channel';\nimport ChannelForm from './components/channelform';\nimport Channels from './components/channels';\nimport Register from './components/register';\nimport Home from './components/home';\nimport NavBar from './components/navbar';\nimport Tag from './components/tag';\nimport Tags from './components/tags';\nimport User from './components/user';\nimport Search from './components/search';\nimport { useEffect, useState } from \"react\";\nimport './styles/App.css';\n\nconst { HashRouter, Switch, Route } = require(\"react-router-dom\");\n\nfunction App() {\n  const [apiURL, setApiUrl] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const verifyToken = () => {\n    if(localStorage.getItem('token') === null) {\n      return;\n    }\n\n    fetch('https://dry-hollows-28901.herokuapp.com/user/verify',{\n      method:'GET', \n      headers: { 'Content-Type': 'application/json',\n      'Authorization' : 'Bearer ' + localStorage.getItem('token') },\n      mode:'cors'\n    })\n    .then(res => {\n      if(res.status === 403 || res.status === 401) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('id');\n        setLoggedIn(false);\n      }\n      else {\n        setLoggedIn(true);\n      }\n    }) \n  }\n\n  function setLogin(status) {\n    if(status === false) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('id');\n      setLoggedIn(false);\n    }\n    else {\n      setLoggedIn(true);\n    }\n  }\n\n  useEffect(() => {\n  }, [loggedIn])\n\n  useEffect(() => {\n      setApiUrl(\"https://dry-hollows-28901.herokuapp.com\");\n      verifyToken();\n  }, [])\n\n  useEffect(() => {\n  }, [apiURL])\n\n  return (\n    <div className=\"App\">\n      <HashRouter hashType={'slash'}>\n        <NavBar setLogin={setLogin} loggedIn={loggedIn} apiURL={apiURL === '' ? '' : apiURL}/>\n        <Switch>\n          <Route path='/' exact><Home apiURL={apiURL === '' ? '' : apiURL}/></Route>\n          <Route path='/channel/:id' exact><Channel loggedIn={loggedIn} apiURL={apiURL === '' ? '' : apiURL}/></Route>\n          <Route path='/add' exact><ChannelForm loggedIn={loggedIn} apiURL={apiURL === '' ? '' : apiURL}/></Route>\n          <Route path='/user/:id' exact><User apiURL={apiURL === '' ? '' : apiURL}/></Route>\n          <Route path='/register' exact><Register loggedIn={loggedIn} apiURL={apiURL === '' ? '' : apiURL}/></Route>\n          <Route path='/tag/:id/:startpos' exact><Tag loggedIn={loggedIn} apiURL={apiURL === '' ? '' : apiURL}/></Route>\n          <Route path='/tags' exact><Tags loggedIn={loggedIn} apiURL={apiURL === '' ? '' : apiURL}/></Route>\n          <Route path='/login' exact><Login setLogin={setLogin} loggedIn={loggedIn} apiURL={apiURL}/></Route>\n          <Route path='/channels/:startpos' exact><Channels setLogin={setLogin} loggedIn={loggedIn} apiURL={apiURL}/></Route>   \n          <Route path='/search/:searchstring/:startpos' exact><Search apiURL={apiURL === '' ? '' : apiURL}/></Route>         \n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}